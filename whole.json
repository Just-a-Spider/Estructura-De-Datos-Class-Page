[
  {
    "model": "exercises.types",
    "pk": 6,
    "fields": {
      "name": "Int",
      "traduc": "(Entero)",
      "content": "Este tipo de variable en programación representa números enteros sin decimales. En C++, el tamaño de un int depende de la arquitectura del sistema y del compilador utilizado, pero comúnmente es de 4 bytes en sistemas de 32 bits y 8 bytes en sistemas de 64 bits. El rango de valores para un int suele ser de -2,147,483,648 a 2,147,483,647 en sistemas de 32 bits. En Python, los enteros no tienen un límite fijo y pueden crecer hasta la capacidad de la memoria del sistema.",
      "hasSubtypes": false
    }
  },
  {
    "model": "exercises.types",
    "pk": 7,
    "fields": {
      "name": "Float",
      "traduc": "(Punto Flotante)",
      "content": "Representa números con decimales y sigue el estándar IEEE 754 en la mayoría de las implementaciones. En C++, un float generalmente ocupa 4 bytes, mientras que un double ocupa 8 bytes. Estos tipos tienen límites de precisión y rango determinados por el estándar. En Python, los números de punto flotante también siguen el estándar IEEE 754 y no tienen límites específicos, ya que la precisión depende de la capacidad de la memoria del sistema.",
      "hasSubtypes": false
    }
  },
  {
    "model": "exercises.types",
    "pk": 8,
    "fields": {
      "name": "Char",
      "traduc": "(Caracter)",
      "content": "Representa un solo carácter y en C++, ocupa 1 byte de memoria. Puede almacenar cualquier carácter Unicode. En Python, un carácter es representado por una cadena de longitud 1 y el tamaño en memoria puede variar según la codificación utilizada (por ejemplo, UTF-8).",
      "hasSubtypes": false
    }
  },
  {
    "model": "exercises.types",
    "pk": 9,
    "fields": {
      "name": "String",
      "traduc": "(Cadena de Caracteres)",
      "content": "Representa una secuencia de caracteres. En C++, el tamaño de una cadena depende de la longitud de la cadena y de la implementación de la cadena en uso.  En Python, una cadena es un objeto dinámico y su tamaño puede variar según la cantidad de caracteres y la implementación interna de Python.",
      "hasSubtypes": false
    }
  },
  {
    "model": "exercises.types",
    "pk": 10,
    "fields": {
      "name": "Bool",
      "traduc": "(Booleano)",
      "content": "Representa valores lógicos, generalmente ocupando 1 byte en C++. En Python, un booleano también ocupa espacio en memoria, generalmente alrededor de 28 bytes debido a la infraestructura subyacente de los objetos en Python. Sin embargo, los booleanos en Python son esenciales para la lógica de control de flujo y evaluación de expresiones condicionales.",
      "hasSubtypes": false
    }
  },
  {
    "model": "exercises.types",
    "pk": 11,
    "fields": {
      "name": "Tipos de Datos Abstractos",
      "traduc": "(TDA)",
      "content": "Los Tipos de Datos Abstractos (TDA) son una abstracción en programación que se centra en la definición de datos y las operaciones que se pueden realizar con ellos, sin revelar los detalles internos de cómo se implementan esas operaciones. En esencia, un TDA define un conjunto de datos y las operaciones que se pueden realizar sobre esos datos, pero oculta los detalles de implementación detrás de una interfaz clara. \r\n\r\n<h3>Características Clave:</h3>\r\n<p class=\"themeContext\">\r\nAbstracción: Los TDA proporcionan una interfaz abstracta que describe qué puede hacerse con los datos, pero no cómo se realiza internamente cada operación. Esto permite a los programadores utilizar y manipular datos sin preocuparse por los detalles de la implementación.\r\n\r\nEncapsulamiento: Los detalles internos de la implementación están encapsulados y no son accesibles desde fuera del TDA. Solo la interfaz pública, que define las operaciones permitidas, es visible y accesible.\r\n\r\nReutilización de Código: Al utilizar TDA, se fomenta la reutilización de código. Un TDA bien diseñado puede ser implementado una vez y utilizado en diferentes partes de un programa o incluso en diferentes programas.\r\n</p>",
      "hasSubtypes": true
    }
  },
  {
    "model": "exercises.subtypes",
    "pk": 1,
    "fields": {
      "name": "Struct",
      "traduc": "(Estructura)",
      "content": "En programación, una struct es una forma de definir un tipo de dato que agrupa variables bajo un solo nombre. Puede contener diferentes tipos de datos, incluyendo otros struct. Es útil para organizar y manipular conjuntos de datos relacionados. En C++, el tamaño de una struct es la suma de los tamaños de sus miembros, con posiblemente algunos bytes adicionales para la alineación de memoria. En Python, las estructuras de datos similares a struct pueden ser creadas usando clases, pero no hay un equivalente directo a las struct en C++. Python maneja automáticamente la memoria y la alineación, por lo que no es necesario preocuparse por estos detalles a nivel del programador.",
      "type": 11,
      "py_snippet": "class Alumno:\r\n    def __init__(self):\r\n        self.Cod = 0\r\n        self.nombre = \"\"\r\n        self.edad = 0\r\n        self.promedio = 0.0",
      "cpp_snippet": "struct alumno{\r\n    int Cod;\r\n    string nombre;\r\n    string apellido;\r\n    int edad;\r\n    float promedio;\r\n};"
    }
  },
  {
    "model": "exercises.subtypes",
    "pk": 2,
    "fields": {
      "name": "Vector",
      "traduc": "⠀",
      "content": "Un vector en C++ es un contenedor dinámico proporcionado por la biblioteca estándar (vector) que permite almacenar una secuencia de elementos del mismo tipo con un tamaño que puede cambiar dinámicamente. <br>\r\n<h3>Métodos</h3>\r\n<p>Los vectores proporcionan varios métodos útiles, como push_back() para añadir elementos al final, pop_back() para eliminar el último elemento, y size() para obtener el tamaño actual</p><br>\r\n<h3>Dinamismo</h3>\r\n<p>A diferencia de los arrays tradicionales en C++, los vectores pueden cambiar su tamaño dinámicamente, lo que los hace más flexibles</p><br>\r\n<h3>Eficiencia</h3>\r\n<p>Los vectores ofrecen un acceso eficiente a los elementos mediante índices constantes, similar a los arrays</p><br>\r\n<h1>Alternativa en Python</h1>\r\n<p>En Python, la alternativa más cercana a un vector sería una lista. Las listas en Python son estructuras de datos dinámicas que pueden contener elementos de diferentes tipos</p><br>\r\n<h3>Métodos</h3>\r\n<p>Las listas en Python proporcionan métodos como append() para añadir elementos al final, pop() para eliminar un elemento específico, y len() para obtener la longitud</p><br>",
      "type": 11,
      "py_snippet": "# Creación e inicialización de una lista\r\nnumeros = [1, 2, 3, 4, 5]\r\n\r\n# Acceso a elementos\r\nprint(\"Primer elemento:\", numeros[0])\r\n\r\n# Modificación de elementos\r\nnumeros[2] = 10\r\n\r\n# Añadir elementos al final\r\nnumeros.append(6)\r\n\r\n# Longitud de la lista\r\nprint(\"Longitud de la lista:\", len(numeros))",
      "cpp_snippet": "#include <vector>\r\n#include <iostream>\r\n\r\nint main() {\r\n    // Declaración e inicialización de un vector de enteros\r\n    std::vector<int> numeros = {1, 2, 3, 4, 5};\r\n\r\n    // Acceso a elementos\r\n    std::cout << \"Primer elemento: \" << numeros[0] << std::endl;\r\n\r\n    // Modificación de elementos\r\n    numeros[2] = 10;\r\n\r\n    // Añadir elementos al final\r\n    numeros.push_back(6);\r\n\r\n    // Tamaño del vector\r\n    std::cout << \"Tamaño del vector: \" << numeros.size() << std::endl;\r\n\r\n    return 0;\r\n}"
    }
  },
  {
    "model": "exercises.categories",
    "pk": 1,
    "fields": {
      "name": "Arreglos",
      "icon": "<iconify-icon icon=\"mdi:application-array-outline\"></iconify-icon>",
      "summary": "Estructura de Datos que almacena una colección de elementos en un orden lineal",
      "content": "Un arreglo, en informática y programación, es una estructura de datos que permite almacenar un conjunto ordenado de elementos bajo un solo nombre o identificador. Está compuesto por un espacio de memoria contiguo que se divide en celdas o casillas, cada una de las cuales almacena un elemento específico. Estos elementos pueden ser de cualquier tipo de dato, como números, caracteres, objetos, u otros, y se organizan de manera secuencial, lo que significa que cada elemento tiene una posición única, generalmente representada por un índice numérico.\r\n\r\nLa principal característica de un arreglo es su capacidad para acceder eficientemente a elementos individuales mediante su índice, lo que permite una búsqueda y manipulación rápida de datos. Además, los arreglos suelen tener un tamaño fijo o una capacidad predeterminada al ser creados, lo que significa que la cantidad de elementos que pueden contener se establece en el momento de su declaración y no se puede modificar fácilmente.\r\n\r\nLos arreglos pueden tener una o más dimensiones, lo que significa que pueden representar datos unidimensionales, como listas o vectores, o datos multidimensionales, como matrices o tablas. La elección de utilizar un arreglo en lugar de otras estructuras de datos depende de las necesidades específicas del programa y de la eficiencia en el acceso a los datos que se requiere.",
      "hasSubcategories": false
    }
  },
  {
    "model": "exercises.categories",
    "pk": 3,
    "fields": {
      "name": "Estructuras",
      "icon": "<iconify-icon icon=\"gg:list\"></iconify-icon>",
      "summary": "Son colecciones organizadas de datos que permiten almacenar, acceder y manipular información de manera eficiente",
      "content": "Una struct es una forma de definir una estructura de datos que puede contener variables de diferentes tipos. A diferencia de las clases, las estructuras (struct) en C++ tienen miembros públicos por defecto y se utilizan comúnmente para agrupar datos relacionados.\r\n\r\nEn Python, el equivalente a una estructura struct en C++ podría ser una clase simple con atributos.",
      "hasSubcategories": false
    }
  },
  {
    "model": "exercises.categories",
    "pk": 4,
    "fields": {
      "name": "Alg. Búsqueda",
      "icon": "<iconify-icon icon=\"majesticons:search\"></iconify-icon>",
      "summary": "Algoritmos para encontrar información en conjuntos de datos",
      "content": "Los algoritmos de búsqueda constituyen fundamentos cruciales en la informática, delineando procedimientos detallados para explorar y encontrar datos en estructuras complejas. Estos procesos, intrínsecos a la eficiencia computacional, operan mediante una secuencia lógica de pasos que guían la comparación sistemática de elementos dentro de un conjunto de datos. Ya sea en listas, arreglos o bases de datos, la aplicación metódica de estos algoritmos busca discernir y ubicar información específica con la menor cantidad de operaciones posible, optimizando así el rendimiento y la velocidad de recuperación de datos.\r\n\r\nLa esencia de los algoritmos de búsqueda radica en su capacidad para navegar a través de vastas cantidades de información, identificando patrones y relaciones, y proporcionando resultados precisos. Su relevancia abarca desde la programación básica hasta aplicaciones avanzadas, desempeñando un papel esencial en la resolución de problemas y la optimización de recursos computacionales.",
      "hasSubcategories": true
    }
  },
  {
    "model": "exercises.categories",
    "pk": 5,
    "fields": {
      "name": "Alg. Ordenamiento",
      "icon": "<iconify-icon icon=\"iconoir:sort\"></iconify-icon>",
      "summary": "Algoritmos que organizan datos mediante comparación y reorganización",
      "content": "Los algoritmos de ordenamiento son esenciales en el ámbito de la informática para organizar grandes conjuntos de datos de manera sistemática y eficiente. Estos procedimientos, fundamentales en el diseño de algoritmos, establecen reglas claras de comparación entre los elementos y aplican operaciones de intercambio o reorganización iterativamente hasta que los datos estén dispuestos en un orden específico. Desde métodos más simples como el de burbuja, que compara y ajusta pares adyacentes, hasta enfoques más complejos como el algoritmo de fusión, que divide y combina subconjuntos, cada uno busca minimizar la complejidad temporal y los recursos necesarios para lograr la disposición ordenada de los elementos.\r\n\r\nLa eficacia de los algoritmos de ordenamiento no solo impacta en la presentación ordenada de datos, sino que también tiene implicaciones significativas en el rendimiento general de los sistemas informáticos. Algoritmos como el de ordenamiento rápido (quicksort) se destacan por su eficiencia en términos de tiempo, siendo cruciales en aplicaciones donde la velocidad de procesamiento es fundamental, como bases de datos y algoritmos de búsqueda avanzados.",
      "hasSubcategories": true
    }
  },
  {
    "model": "exercises.subcategories",
    "pk": 1,
    "fields": {
      "name": "Bubble Sort",
      "icon": "set-iconify-here",
      "summary": "Compara y cambia elementos adyacentes hasta que la lista esté ordenada.",
      "content": "Bubble Sort  u Ordenamiento Burbuja es un algoritmo de ordenamiento simple pero ineficiente para listas largas, ya que requiere muchas comparaciones y movimientos. Sin embargo, es útil para comprender los conceptos básicos de ordenamiento. Su funcionamiento se denota en los pasos:\r\n\r\n1. Comienza comparando el primer elemento de la lista con el siguiente.\r\n2. Si el primer elemento es mayor que el siguiente, intercambia sus posiciones.\r\n3. Luego, compara el segundo elemento con el tercero y repite el intercambio si es necesario.\r\n4. Este proceso continúa a lo largo de toda la lista, comparando y moviendo elementos adyacentes.\r\n5. En cada pasada a través de la lista, el elemento más grande \"burbujea\" hasta el final.\r\n6. Después de la primera pasada, el elemento más grande estará en la última posición.\r\n7. Luego, se repiten las pasadas anteriores sin incluir la última posición (ya que está ordenada).\r\n8. Este proceso se repite hasta que no se realicen más intercambios en una pasada.\r\n9. La lista estará completamente ordenada cuando no se realicen intercambios en una pasada.",
      "category": 5
    }
  },
  {
    "model": "exercises.subcategories",
    "pk": 2,
    "fields": {
      "name": "Busq. Binaria",
      "icon": "set-iconify-here",
      "summary": "resumen",
      "content": "texto",
      "category": 4
    }
  },
  {
    "model": "exercises.exercises",
    "pk": 1,
    "fields": {
      "category": 1,
      "title": "Funciones con Strings",
      "desc": "Ingresar una frase y realizar una variedad de operaciones con esta",
      "cpp_snippet": "#include<iostream>\r\n#include<string.h>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    system(\"clear\");\r\n\r\n    //Variables\r\n    char Frase[50], a=' ';\r\n    \r\n    int i, tam, cantpal, cont = 0, vocal = 0;\r\n\r\n    //Funcion\r\n    cout<<\"Ingrese una frase: \";\r\n    cin.getline(Frase, 50, '\\n');\r\n    tam = strlen(Frase);\r\n\r\n    for(i=0; i<tam; i++){\r\n        Frase[i]= toupper(Frase[i]);\r\n    }\r\n\r\n    for(i=0; i<tam; i++){\r\n        if(Frase[i] == a){\r\n           cont++; \r\n        }\r\n        if(Frase[i] == 'A' || Frase[i] == 'E' || Frase[i] == 'I' || Frase[i] == 'O' || Frase[i] == 'U'){\r\n            vocal += 1;\r\n        }\r\n    }\r\n\r\n    cantpal = cont+1;\r\n\r\n    cout<<\"Cantidad de palabras de la Frase es: \"<<cantpal<<'\\n';\r\n    cout<<\"La frase en mayusculas es: \\n\"<<Frase;\r\n    cout<<\"\\nLa cantidad de vocales en la frase es de: \"<<vocal<<endl;\r\n}",
      "py_snippet": "from os import system\r\n\r\nsystem('clear')\r\n\r\ncantidad_vocales = 0\r\nvocales = ['a','e','i','o','u']\r\n\r\nFrase = str(input('Ingrese una Frase: '))\r\n\r\ncantpal = list(Frase.split())\r\n\r\nfor i in Frase.lower():\r\n    if i in vocales:\r\n        cantidad_vocales += 1\r\n\r\nprint(f'\\nLa cantidad de palabras de la frase \\n{Frase} \\nEs; {len(cantpal)}\\n')\r\nprint(f'La frase en letras mayúsculas es \\n{Frase.upper()}\\n')\r\nprint(f'La cantidad de vocales en la frase es de: {cantidad_vocales}')",
      "subcategoty": null
    }
  },
  {
    "model": "exercises.exercises",
    "pk": 2,
    "fields": {
      "category": 1,
      "title": "Impares en un Arreglo de Una Dimensión",
      "desc": "Algoritmo que ingrese N elementos a un arreglo unidimensional y muestre solo los elementos de los casilleros impares, además que imprima la sumas de  los elementos de los casilleros impares",
      "cpp_snippet": "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    system(\"cls\");\r\n\r\n    int x, Y[50], sum=0, B[50], j=0;\r\n\r\n\r\n    do{\r\n    cout<<\"Cuantos elementos quiere ingresar? \";\r\n    cin>>x;\r\n    }while(x <= 0);\r\n\r\n\r\n    for(int i= 0; i<x; i++){\r\n        cout<<\"Ingrese el elemento \"<<i+1<<\": \";\r\n        cin>>Y[i];\r\n\r\n        if(Y[i]%2 != 0){\r\n            B[j] = Y[i];\r\n            j++;\r\n            sum += Y[i];\r\n        }\r\n    }\r\n\r\n    cout<<\"\\n\\nLos elementos impares ingresados son: \\n\";\r\n\r\n    for(int i = 0; i<j; i++){\r\n        cout<<B[i]<<\", \";\r\n    }\r\n    cout<<\"\\nLa suma de estos numeros es: \"<<sum;\r\n}",
      "py_snippet": "from os import system\r\n\r\nsystem('cls')\r\n\r\nY = []\r\nB = []\r\nsum = 0\r\n\r\nx = int(input(\"Cuantos datos quiere ingresar? \"))\r\n\r\nfor i in range(0, x):\r\n    a = int(input(f\"Ingrese el dato {i+1}:  \"))\r\n    Y.append(a)\r\n    if(a%2 != 0):\r\n        B.append(Y[i])\r\n        sum += Y[i]\r\n\r\n\r\nprint(f\"\\nLos datos impares ingresados son {B}\")\r\nprint(f\"La suma de estos datos es {sum}\")",
      "subcategoty": null
    }
  },
  {
    "model": "exercises.exercises",
    "pk": 3,
    "fields": {
      "category": 1,
      "title": "Promedio de Pares Positivos e Impares Negativos",
      "desc": "Algoritmo que ingrese N elementos a un arreglo de enteros y muestre el promedio de los pares positivos y el promedio de los impares negativos",
      "cpp_snippet": "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n    system(\"cls\");\r\n\r\n    int n, Y[20], spp = 0, cpp = 0, sin = 0, cin = 0;\r\n    float promp, promi;\r\n\r\n    cout<<\"Cuantos elementos quiere ingresar? \";\r\n    cin>>n;\r\n\r\n    for(int i = 0; i<n; i++){\r\n        cout<<\"Ingrese el elemento \"<<i+1<<\": \";\r\n        cin>>Y[i];\r\n        if(Y[i]%2 != 0){\r\n            if(Y[i] >= 0){\r\n                spp += Y[i];\r\n                cpp++;\r\n            }\r\n        }else{\r\n            if(Y[i] < 0){\r\n                sin += Y[i];\r\n                cin++;\r\n            }\r\n        }\r\n    }\r\n\r\n    promp = spp/cpp;\r\n    promi = sin/cin;\r\n\r\n    cout<<\"\\n\\nEl promedio de pares positivos es: \"<<promp;\r\n    cout<<\"\\nEl promedio de impares negativos es: \"<<promi;\r\n}",
      "py_snippet": "from os import system\r\n\r\nsystem('cls')\r\n\r\n#Variables\r\nY = []\r\nspp = 0\r\ncpp = 0 \r\nsin = 0 \r\ncin = 0 \r\n\r\nx = int(input(\"Cuantos datos quiere ingresar? \"))\r\n\r\nfor i in range(0, x):\r\n    a = int(input(f\"Ingrese el dato {i+1}:  \"))\r\n    Y.append(a)\r\n    if(a%2 == 0):\r\n        if(a >= 0):\r\n            spp += a\r\n            cpp += 1\r\n    else:\r\n        if(a < 0):\r\n            sin += a\r\n            cin += 1\r\n\r\nprint(f\"Los elementos ingresados son: {Y}\")\r\nprint(f\"\\nEl promedio de pares positivos es: {spp/cpp}\")\r\nprint(f\"El promedio de impares negativos es: {sin/cin}\\n\")",
      "subcategoty": null
    }
  },
  {
    "model": "exercises.exercises",
    "pk": 4,
    "fields": {
      "category": 1,
      "title": "Intersección de Dos Arreglos",
      "desc": "Algoritmo que permita el ingreso de datos de dos arreglos y luego muestre qué elementos tienen en común",
      "cpp_snippet": "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nvoid ingresar(vector<int>& array, string nom) {\r\n    int x;\r\n    cout << \"Cuantos datos quiere ingresar en el arreglo \" << nom << \"? \";\r\n    cin >> x;\r\n\r\n    for (int i = 0; i < x; i++) {\r\n        int a;\r\n        cout << \"Ingrese el dato \" << i+1 << \": \";\r\n        cin >> a;\r\n        array.push_back(a);\r\n    }\r\n}\r\n\r\nint main() {\r\n    system(\"cls\");\r\n\r\n    vector<int> A, B, C;\r\n\r\n    ingresar(A, \"A\");\r\n    ingresar(B, \"B\");\r\n\r\n    for (int i = 0; i < A.size(); i++) {\r\n        if (find(B.begin(), B.end(), A[i]) != B.end()) {\r\n            C.push_back(A[i]);\r\n        }\r\n    }\r\n\r\n    cout << \"\\nLos arreglos: \\n\";\r\n    cout << \"A: \";\r\n    for (int i = 0; i < A.size(); i++) {\r\n        cout << A[i] << \" \";\r\n    }\r\n    cout << \"\\nB: \";\r\n    for (int i = 0; i < B.size(); i++) {\r\n        cout << B[i] << \" \";\r\n    }\r\n    cout << \"\\nComparten los elementos: \";\r\n    for (int i = 0; i < C.size(); i++) {\r\n        cout << C[i] << \" \";\r\n    }\r\n    cout << \"\\n\";\r\n\r\n    return 0;\r\n}",
      "py_snippet": "from os import system\r\n\r\nsystem('cls')\r\n\r\n#Arreglos\r\nA = []\r\nB = []\r\nC = []\r\n\r\ndef ingresar(array, nom):\r\n    x = int(input(f\"Cuantos datos quiere ingresar en el arreglo {nom}? \"))\r\n\r\n    for i in range(0, x):\r\n        a = int(input(f\"Ingrese el dato {i+1}:  \"))\r\n        array.append(a)\r\n\r\ningresar(A, 'A')\r\ningresar(B, 'B')\r\n\r\nfor i in range(len(A)):\r\n    if(A[i] in B):\r\n        C.append(A[i])\r\n\r\nprint(f\"\\nLos arreglos: \\n{A}\\n{B}\\nComparten los elementos {C}\\n\")",
      "subcategoty": null
    }
  },
  {
    "model": "exercises.exercises",
    "pk": 5,
    "fields": {
      "category": 1,
      "title": "Menu de Opciones",
      "desc": "Programa que permita ingresar elementos y mostrar cada elemento derecha e izquierda con teclas",
      "cpp_snippet": "#include <iostream>\r\n#include <string.h>\r\n#include <conio.h>\r\n\r\nusing namespace std;\r\n\r\nint main(int argc, char** argv){\r\n    int A[20],N=0, i, KD, contA=0, vacios, op, cont=0;\r\n    char op2, tecla;\r\n\r\n    do{\r\n        system(\"cls\");\r\n        cout<<\"------MENU------\\n\";\r\n        cout<<\"1) Ingreso de Datos\\n\";\r\n        cout<<\"2) Lista circular Derecha\\n\";\r\n        cout<<\"3) Lista circular Izquierda\\n\";\r\n        cout<<\"4) Lista doblemente enlazada\\n\";\r\n        cout<<\"...Elija una opcion: \";\r\n        cin>>op;\r\n        switch (op)\r\n        {\r\n        case 1:\r\n            system(\"cls\");\r\n            vacios = 20-N;\r\n            cout<<\"Hola\\nEl arreglo actualmente tiene \"<<vacios<<\" casilleros vacios\\n\";\r\n            cout<<\"\\nCuantos datos ingresara o adicionara: \";\r\n            cin>>KD;\r\n            while (KD<=0 || KD>vacios){\r\n                    cout<<\"\\nLos datos a ingresar o adicionar: \";\r\n                    cin>>KD;\r\n            }\r\n            N=contA+KD;\r\n            for(i=contA;i<N;i++){\r\n                cout<<\"A[\"<<i<<\"]: \";\r\n                cin>>A[i];\r\n                contA++;\r\n            }\r\n            cout<<\"\\nDatos ingresados: \\n\";\r\n            for(i=0; i<N; i++){\r\n                cout<<\"A[\"<<i<<\"]: \"<<A[i]<<\", \";\r\n            }\r\n            break;\r\n        \r\n        case 2:\r\n            system(\"cls\");\r\n            cout<<\"\\nMostrando datos hacia la derecha\\n(Presione D para avanzar, X para salir):\\n\";\r\n            i=0; tecla='D';\r\n            while(tecla=='D'){\r\n                if(i==N && tecla=='D')\r\n                    i=0;\r\n                cout<<A[i]<<\", \";\r\n                tecla = getch();\r\n                i++;\r\n            }\r\n            break;\r\n            \r\n        case 3:\r\n            system(\"cls\");\r\n            cout<<\"\\nMostrando datos hacia la izquierda\\n(Presione I para avanzar, X para salir):\\n\";\r\n            i=N-1; tecla='I';\r\n            while(tecla=='I'){\r\n                if(i<0 && tecla=='I')\r\n                    i=N-1;\r\n                cout<<A[i]<<\", \";\r\n                tecla = getch();\r\n                i--;\r\n            }           \r\n            break;\r\n            \r\n        case 4:\r\n            system(\"cls\");\r\n            cout<<\"\\nMuestra datos: \\nD a la derecha\\nI a la izquierda\\n\";\r\n            i = -1; tecla = 'D';\r\n            while(tecla=='D'||tecla=='I'){\r\n                tecla = getch();\r\n\r\n                if(tecla=='D'&&i<N-1)i++;\r\n                    else if(tecla=='D'&&i==N-1)i=0;\r\n\r\n                if(tecla=='I'&&i>0)i--;\r\n                    else if(tecla=='I'&&i<=0)i=N-1;\r\n\r\n                if(tecla!='D' && tecla!='I')\r\n                    break;\r\n\r\n                cout<<\"A[\"<<i<<\"]: \"<<A[i]<<\"\\n\";\r\n            }\r\n            break;\r\n        default:\r\n            cout<<\"Error: Esa opcion no existe...\";\r\n            break;\r\n        }\r\n        cout<<\"Desea continuar (s/n): \";\r\n        cin>>op2;\r\n\r\n    }while(op2=='S' || op2=='s');\r\n    cout<<\"\\nGracias\";\r\n}",
      "py_snippet": "from os import system\r\n\r\nA = [0] * 20\r\nN = 0\r\ncontA = 0\r\n\r\nwhile True:\r\n    system('cls')\r\n    print(\"------MENU------\")\r\n    print(\"1) Ingreso de Datos\")\r\n    print(\"2) Lista circular Derecha\")\r\n    print(\"3) Lista circular Izquierda\")\r\n    print(\"4) Lista doblemente enlazada\")\r\n    op = int(input(\"...Elija una opcion: \"))\r\n\r\n    match op:\r\n        case 1:\r\n            system('cls')\r\n            vacios = 20 - N\r\n            print(f\"Hola\\nEl arreglo actualmente tiene {vacios} casilleros vacios\\n\")\r\n            KD = int(input(\"Cuantos datos ingresara o adicionara: \"))\r\n            while KD <= 0 or KD > vacios:\r\n                KD = int(input(\"Los datos a ingresar o adicionar: \"))\r\n            N = contA + KD\r\n            for i in range(contA, N):\r\n                A[i] = int(input(f\"A[{i}]: \"))\r\n                contA += 1\r\n            print(\"\\nDatos ingresados: \")\r\n            for i in range(N):\r\n                print(f\"A[{i}]: {A[i]}, \", end=\"\")\r\n            print()\r\n\r\n        case 2:\r\n            system('cls')\r\n            print(\"\\nMostrando datos hacia la derecha\\n(Presione D para avanzar, X para salir):\\n\")\r\n            i = 0\r\n            tecla = 'D'\r\n            while tecla == 'D':\r\n                if i == N and tecla == 'D':\r\n                    i = 0\r\n                print(f\"{A[i]}, \", end=\"\")\r\n                tecla = input()\r\n                i += 1\r\n\r\n        case 3:\r\n            system('cls')\r\n            print(\"\\nMostrando datos hacia la izquierda\\n(Presione I para avanzar, X para salir):\\n\")\r\n            i = N - 1\r\n            tecla = 'I'\r\n            while tecla == 'I':\r\n                if i < 0 and tecla == 'I':\r\n                    i = N - 1\r\n                print(f\"{A[i]}, \", end=\"\")\r\n                tecla = input()\r\n                i -= 1\r\n\r\n        case 4:\r\n            system('cls')\r\n            print(\"\\nMuestra datos: \\nD a la derecha\\nI a la izquierda\\n\")\r\n            i = -1\r\n            tecla = 'D'\r\n            while tecla == 'D' or tecla == 'I':\r\n                tecla = input()\r\n\r\n                if tecla == 'D' and i < N - 1:\r\n                    i += 1\r\n                elif tecla == 'D' and i == N - 1:\r\n                    i = 0\r\n\r\n                if tecla == 'I' and i > 0:\r\n                    i -= 1\r\n                elif tecla == 'I' and i <= 0:\r\n                    i = N - 1\r\n\r\n                if tecla != 'D' and tecla != 'I':\r\n                    break\r\n\r\n                print(f\"A[{i}]: {A[i]}\")\r\n\r\n        case _:\r\n            print(\"Error: Esa opcion no existe...\")\r\n            break\r\n\r\n    op2 = input(\"Desea continuar (s/n): \")\r\n    if op2 != 'S' and op2 != 's':\r\n        break\r\n\r\nprint(\"\\nGracias\")",
      "subcategoty": null
    }
  },
  {
    "model": "exercises.exercises",
    "pk": 6,
    "fields": {
      "category": 1,
      "title": "Menu con una Frase",
      "desc": "Programa que permita ingresar una frase, mostrar cada caracter de la derecha a la izquierda y viceversa",
      "cpp_snippet": "#include <iostream>\r\n#include <string.h>\r\n#include <conio.h>\r\n\r\nusing namespace std;\r\n\r\nint main(int argc, char** argv){\r\n    int i, KD, contA=0, vacios, op, cont=0, tam=0;\r\n    char Frase[50],op2, tecla;\r\n\r\n    do{\r\n        system(\"cls\");\r\n        cout<<\"------MENU------\\n\";\r\n        cout<<\"1) Ingresar Frase\\n\";\r\n        cout<<\"2) Lista circular Derecha\\n\";\r\n        cout<<\"3) Lista circular Izquierda\\n\";\r\n        cout<<\"4) Lista doblemente enlazada\\n\";\r\n        cout<<\"...Elija una opcion: \";\r\n        cin>>op;\r\n        switch (op)\r\n        {\r\n        case 1:\r\n            system(\"cls\");\r\n            vacios = 50-tam;\r\n            cout<<\"Hola\\nEl arreglo actualmente tiene \"<<vacios<<\" casilleros vacios\\n\";\r\n            cout<<\"\\nIngrese una Frase: \";\r\n            fflush(stdin);\r\n            cin.getline(Frase, 50, '\\n');\r\n            tam = strlen(Frase);\r\n\r\n            cout<<\"La frase tiene \"<<tam<<\" caracteres\\n\";\r\n\r\n            break;\r\n        \r\n        case 2:\r\n            system(\"cls\");\r\n            cout<<\"\\nMostrando caracteres hacia la derecha\\n(Presione D para avanzar, X para salir):\\n\";\r\n            i=0; tecla='D';\r\n            while(tecla=='D'){\r\n                if(i==tam && tecla=='D')\r\n                    i=0;\r\n                cout<<Frase[i]<<\"\";\r\n                tecla = getch();\r\n                i++;\r\n            }\r\n            break;\r\n            \r\n        case 3:\r\n            system(\"cls\");\r\n            cout<<\"\\nMostrando caracteres hacia la izquierda\\n(Presione I para avanzar, X para salir):\\n\";\r\n            i=tam-1; tecla='I';\r\n            while(tecla=='I'){\r\n                if(i<0 && tecla=='I')\r\n                    i=tam-1;\r\n                cout<<Frase[i]<<\"\";\r\n                tecla = getch();\r\n                i--;\r\n            }           \r\n            break;\r\n            \r\n        case 4:\r\n            system(\"cls\");\r\n            cout<<\"\\nMuestra caracteres: \\nD a la derecha\\nI a la izquierda\\n\\n\";\r\n            i = -1; tecla = 'D';\r\n            while(tecla=='D'||tecla=='I'){\r\n                tecla = getch();\r\n\r\n                if(tecla=='D'&&i<tam-1)i++;\r\n                    else if(tecla=='D'&&i==tam-1)i=0;\r\n\r\n                if(tecla=='I'&&i>0)i--;\r\n                    else if(tecla=='I'&&i<=0)i=tam-1;\r\n\r\n                if(tecla!='D' && tecla!='I')\r\n                    break;\r\n\r\n                cout<<\"Caracter[\"<<i<<\"]: \"<<Frase[i]<<\"\\n\";\r\n            }\r\n            break;\r\n        default:\r\n            cout<<\"Error: Esa opcion no existe...\";\r\n            break;\r\n        }\r\n        cout<<\"Desea continuar (s/n): \";\r\n        cin>>op2;\r\n\r\n    }while(op2=='S' || op2=='s');\r\n    cout<<\"\\nGracias\";\r\n}",
      "py_snippet": "import msvcrt\r\nfrom os import system\r\n\r\n# Variables\r\nopciones = ['1','2','3','4','5']\r\nconfirmacion = ['s','S']\r\n\r\n# Funciones\r\ndef ingresarFrase():\r\n    system('cls')\r\n    fi = input('Ingrese una Frase:\\n')\r\n    return fi\r\n\r\ndef mostrarFrase(Frase):\r\n    system('cls')\r\n    print('Presione D tecla para avanzar\\nPresione X para volver al menu\\n')\r\n    i = 0\r\n    while i < len(Frase):\r\n        tecla = msvcrt.getch().decode()\r\n        if (tecla in ['x','X']):\r\n            return\r\n        elif (tecla in ['d','D']):\r\n            print(Frase[i], end='')\r\n            i += 1\r\n            if i == len(Frase):\r\n                print('')\r\n                i = 0\r\n\r\ndef mostrarFraseEnlazada(Frase):\r\n    system('cls')\r\n    print('Presione D tecla para avanzar -- I para retroceder\\nPresione X para volver al menu\\n')\r\n    i = 0\r\n    tecla = ''\r\n    reversa = list(reversed(Frase))\r\n    while (tecla not in ['x','X'] and Frase is not ''):\r\n        tecla = msvcrt.getch().decode()\r\n        if (tecla in ['d','D']):\r\n            print(Frase[i], end='')\r\n            i += 1\r\n            if i == len(Frase):\r\n                print('')\r\n                i = 0\r\n        elif (tecla in ['i','I']):\r\n            print(reversa[i], end='')\r\n            i += 1\r\n            if i == len(Frase):\r\n                print('')\r\n                i = 0\r\n\r\ndef mostrarMenu(frase, op):\r\n    while(op in confirmacion):\r\n        system('cls')\r\n        print('------MENU------')\r\n        print(f' Frase actual: {frase}')\r\n        print('1) Ingresar Frase')\r\n        print('2) Lista Circular Derecha')\r\n        print('3) Lista Circular Izquierda')\r\n        print('4) Lista Doblemente Enlazada')\r\n        print('5) Salir')\r\n        op = input('...Eliga una opcion: ')\r\n\r\n        while op not in opciones:\r\n            op  = input('\\nPor favor escoja una opción válida: ')\r\n\r\n        match op:\r\n            case '1':\r\n                frase = ingresarFrase()\r\n                mostrarMenu(frase,'s')\r\n            case '2':\r\n                mostrarFrase(frase)\r\n                mostrarMenu(frase,'s')\r\n            case '3':\r\n                mostrarFrase(frase[::-1])\r\n                mostrarMenu(frase,'s')\r\n            case '4':\r\n                mostrarFraseEnlazada(frase)\r\n                mostrarMenu(frase,'s')\r\n            case '5':\r\n                op2 = input('Desea continuar? (s/n): ')\r\n                mostrarMenu(frase,op2)\r\n\r\nmostrarMenu('', 's')",
      "subcategoty": null
    }
  },
  {
    "model": "exercises.exercises",
    "pk": 7,
    "fields": {
      "category": 1,
      "title": "Ingresar, Ver, Buscar y Eliminar Elementos",
      "desc": "Algoritmo que permita todas las funciones mencionadas en un arreglo de números enteros",
      "cpp_snippet": "#include <iostream>\r\n#include <vector>\r\n#include <conio.h>\r\n\r\nusing namespace std;\r\n\r\n// Funciones\r\nvector<int> ingresarDatos(vector<int> array) {\r\n    system(\"cls\");\r\n    cout << \"Cantidad de elementos actuales:\\n\" << array.size() << endl;\r\n    int n;\r\n    cout << \"\\nCuantos elementos desea ingresar?: \";\r\n    cin >> n;\r\n    while (n <= 0) {\r\n        cout << \"\\nLa cantidad de elementos a ingresar debe ser mayor a 0: \";\r\n        cin >> n;\r\n    }\r\n    for (int i = 1; i <= n; i++) {\r\n        int dato;\r\n        cout << \"Ingrese el \" << i << \"° elemento a ingresar: \";\r\n        cin >> dato;\r\n        while (find(array.begin(), array.end(), dato) != array.end()) {\r\n            cout << \"El elemento ya existe en el arreglo, ingrese otro: \";\r\n            cin >> dato;\r\n        }\r\n        array.push_back(dato);\r\n    }\r\n    cout << \"\\nDatos ingresados... presione cualquier tecla para volver\";\r\n    getch();\r\n    return array;\r\n}\r\n\r\nvoid mostrarDatos(vector<int> array) {\r\n    system(\"cls\");\r\n    cout << \"Elementos actuales:\\n\";\r\n    for (int i = 0; i < array.size(); i++) {\r\n        cout << array[i] << \" \";\r\n    }\r\n    cout << \"\\n\\nPresione cualquier tecla para volver\";\r\n    getch();\r\n}\r\n\r\nvoid buscarDato(vector<int> array) {\r\n    system(\"cls\");\r\n    int busc;\r\n    cout << \"Que elemento desea encontrar?: \";\r\n    cin >> busc;\r\n    if (find(array.begin(), array.end(), busc) != array.end()) {\r\n        cout << \"El elememto se encuentra en la posicion: \" << find(array.begin(), array.end(), busc) - array.begin() << endl;\r\n    } else {\r\n        cout << \"El elemento no se encuentra en el arreglo\" << endl;\r\n    }\r\n    cout << \"\\nPresione cualquier tecla para volver\";\r\n    getch();\r\n}\r\n\r\nvector<int> elimDato(vector<int> array) {\r\n    system(\"cls\");\r\n    int elim;\r\n    cout << \"Que elemento desea eliminar?: \";\r\n    cin >> elim;\r\n    array.erase(find(array.begin(), array.end(), elim));\r\n    cout << \"\\nElemento eliminado... presione cualquier tecla para volver\";\r\n    getch();\r\n    return array;\r\n}\r\n\r\nvoid mostrarMenu(vector<int> array, char op) {\r\n    while (op == 's' || op == 'S') {\r\n        system(\"cls\");\r\n        cout << \"---------------MENU---------------\" << endl;\r\n        cout << \"Cantidad de elementos actuales: \" << array.size() << endl;\r\n        cout << \"1) Ingresar Datos\" << endl;\r\n        cout << \"2) Ver Datos\" << endl;\r\n        cout << \"3) Buscar un Dato\" << endl;\r\n        cout << \"4) Eliminar un Dato\" << endl;\r\n        cout << \"5) Salir\" << endl;\r\n        cout << \"\\n...Eliga una opcion: \";\r\n        cin >> op;\r\n\r\n        while (op < '1' || op > '5') {\r\n            cout << \"\\nPor favor escoja una opción válida: \";\r\n            cin >> op;\r\n        }\r\n\r\n        switch (op) {\r\n            case '1':\r\n                array = ingresarDatos(array);\r\n                mostrarMenu(array, 's');\r\n                break;\r\n            case '2':\r\n                mostrarDatos(array);\r\n                mostrarMenu(array, 's');\r\n                break;\r\n            case '3':\r\n                buscarDato(array);\r\n                mostrarMenu(array, 's');\r\n                break;\r\n            case '4':\r\n                array = elimDato(array);\r\n                mostrarMenu(array, 's');\r\n                break;\r\n            case '5':\r\n                cout << \"Desea continuar? (s/n): \";\r\n                cin >> op;\r\n                mostrarMenu(array, op);\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nint main() {\r\n    vector<int> db;\r\n    mostrarMenu(db, 's');\r\n    return 0;\r\n}",
      "py_snippet": "from os import system\r\nimport msvcrt\r\n\r\n# Variables\r\ndb = []\r\n\r\n# Funciones\r\ndef ingresarDatos(array):\r\n    system('cls')\r\n    print(f'Cantidad de elementos actuales:\\n{len(array)}')\r\n    n = int(input(\"\\n¿Cuántos elementos desea ingresar?: \"))\r\n    while n<=0:\r\n        n = int(input(\"\\nLa cantidad de elementos a ingresar debe ser mayor a 0: \"))\r\n    for i in range(1,n+1):\r\n        dato = int(input(f'Ingrese el {i}° elemento a ingresar: '))\r\n        while dato in array:\r\n            dato = int(input('El elemento ya existe en el arreglo, ingrese otro: '))\r\n        else:\r\n            array.append(dato)\r\n    print('\\nDatos ingresados... presione cualquier tecla para volver')\r\n    msvcrt.getch()\r\n    return array\r\n\r\ndef mostrarDatos(array):\r\n    system('cls')\r\n    print(f'Elementos actuales:\\n{array}')\r\n    print('\\nPresione cualquier tecla para volver')\r\n    msvcrt.getch()\r\n\r\ndef buscarDato(array):\r\n    system('cls')\r\n    busc = int(input('¿Qué elemento desea encontrar?: '))\r\n    if busc in array:\r\n        print(f'El elememto se encuentra en la posicion: {array.index(busc)}')\r\n    else:\r\n        print('El elemento no se encuentra en el arreglo')\r\n    print('\\nPresione cualquier tecla para volver')\r\n    msvcrt.getch()\r\n\r\ndef elimDato(array):\r\n    system('cls')\r\n    elim = int(input('¿Qué elemento desea eliminar?: '))\r\n    array.pop(array.index(elim))\r\n    print('\\nElemento eliminado... presione cualquier tecla para volver')\r\n    msvcrt.getch()\r\n    return array\r\n\r\ndef mostrarMenu(array, op):\r\n    while(op in ['s','S']):\r\n        system('cls')\r\n        print('---------------MENU---------------')\r\n        print(f'Cantidad de elementos actuales: {len(array)}')\r\n        print('1) Ingresar Datos')\r\n        print('2) Ver Datos')\r\n        print('3) Buscar un Dato')\r\n        print('4) Eliminar un Dato')\r\n        print('5) Salir')\r\n        op = input('\\n...Eliga una opcion: ')\r\n\r\n        while op not in ['1','2','3','4','5']:\r\n            op  = input('\\nPor favor escoja una opción válida: ')\r\n\r\n        match op:\r\n            case '1':\r\n                array = ingresarDatos(array)\r\n                mostrarMenu(array,'s')\r\n            case '2':\r\n                mostrarDatos(array)\r\n                mostrarMenu(array,'s')\r\n            case '3':\r\n                buscarDato(array)\r\n                mostrarMenu(array,'s')\r\n            case '4':\r\n                elimDato(array)\r\n                mostrarMenu(array,'s')\r\n            case '5':\r\n                op = input('Desea continuar? (s/n): ')\r\n                mostrarMenu(array,op)\r\n\r\nmostrarMenu(db, 's')",
      "subcategoty": null
    }
  },
  {
    "model": "exercises.exercises",
    "pk": 8,
    "fields": {
      "category": 5,
      "title": "Ordenamiento de Alumnos",
      "desc": "Algoritmo que utilize el Ordenamiento Burbuja permita el ingreso de N cantidad de estudiantes y sus datos (Nombre, DNI, Edad) y que muestre dos listas ordenadas:\r\n1. Orden Ascendente por Edad\r\n2. Orden Ascendente por Nombre",
      "cpp_snippet": "#include <iostream>\r\n#include <string.h>\r\n\r\nusing namespace std;\r\n\r\n// Variables\r\nint Edad[50],i,j,N,AuxE;\r\nchar Nom[50][35],AuxN[35],DNI[50][9],AuxD[8]; //Limitando DNI a 9 y no a 8 para evitar errores de concatenación\r\n\r\n// Bubble Sort\r\nvoid organizar(int a, int b){\r\n    AuxE    = Edad[a];\r\n\tEdad[a] = Edad[b];\r\n\tEdad[b] = AuxE;   \r\n\t/*****************/\r\n\tstrcpy(AuxD,DNI[a]);\t\r\n\tstrcpy(DNI[a],DNI[b]); \r\n\tstrcpy(DNI[b],AuxD);\t\r\n\t/*****************/\r\n\tstrcpy(AuxN,Nom[a]);\t//AuxN  = Nom[i];\r\n\tstrcpy(Nom[a],Nom[b]);  //Nom[i] = Nom[j];\r\n\tstrcpy(Nom[b],AuxN);\r\n}\r\n\r\n// Mostar Datos\r\nvoid mostrar(){\r\n\tfor(i=0;i<N;i++){\r\n\t\tcout<<\"---------------\\nAlumno \"<<i+1<<\"\\nNombre: \"<<Nom[i]<<endl;\r\n\t\tcout<<\"DNI: \"<<DNI[i]<<endl;\r\n\t\tcout<<\"Edad: \"<<Edad[i]<<endl;\r\n\t}\r\n}\r\n\r\nint main(int argc, char** argv) {\r\n    system(\"cls\");\r\n\tcout<<\"Cuantos datos ingresara?: \";\r\n\tcin>>N;\r\n\tcin.ignore();\r\n\tfor(i=0;i<N;i++){\r\n\t\tcout<<\"\\nAlumno \"<<i+1<<\"\\nNombre: \";\r\n\t\tfflush(stdin);\r\n\t\tcin.getline(Nom[i],35,'\\n');\r\n\t\tcout<<\"DNI: \";\r\n\t\tcin>>DNI[i];\r\n\t\tcout<<\"Edad: \";\r\n\t\tcin>>Edad[i];\r\n\t\tcin.ignore();\r\n\t}\r\n\tsystem(\"cls\");\r\n\t\r\n\tcout<<\"Mostrando Nombre, DNI y Edad: \\n\";\r\n\tmostrar();\r\n    //*************************************************************\r\n    //ORDENANDO POR EDAD EN FORMA ASCENDENTE\r\n    for(i=0;i<N-1;i++)\r\n        for(j=i+1;j<N;j++)\r\n            if(Edad[i]>Edad[j]){\r\n                organizar(i,j);\r\n            }\r\n\t\r\n\tcout<<\"\\n\\nMostrando orden ascendente por edad: \\n\";\r\n\tmostrar();\t\r\n\t//*************************************************************\r\n\t//ORDENANDO POR NOMBRE EN FORMA ASCENDEnTE\t\r\n    for(i=0;i<N-1;i++)\r\n        for(j=i+1;j<N;j++)\r\n            if(strcmp(Nom[i], Nom[j])>0){\r\n                organizar(i,j);\r\n            }\t\r\n    cout<<\"\\n\\nMostrando orden ascendente por Nombre: \\n\";\r\n\tmostrar();\r\n\r\n\treturn 0;\r\n}",
      "py_snippet": "# Variables\r\nEdad = [0]*50\r\nNom = ['']*50\r\nDNI = ['']*50\r\nN = 0\r\nAuxE = 0\r\nAuxN = ''\r\nAuxD = ''\r\n\r\n# Bubble Sort\r\ndef organizar(a, b):\r\n    global Edad, Nom, DNI, AuxE, AuxN, AuxD\r\n    AuxE = Edad[a]\r\n    Edad[a] = Edad[b]\r\n    Edad[b] = AuxE\r\n    AuxD = DNI[a]\r\n    DNI[a] = DNI[b]\r\n    DNI[b] = AuxD\r\n    AuxN = Nom[a]\r\n    Nom[a] = Nom[b]\r\n    Nom[b] = AuxN\r\n\r\n# Mostar Datos\r\ndef mostrar():\r\n    global N, Nom, DNI, Edad\r\n    for i in range(N):\r\n        print(\"---------------\")\r\n        print(\"Alumno\", i+1)\r\n        print(\"Nombre:\", Nom[i])\r\n        print(\"DNI:\", DNI[i])\r\n        print(\"Edad:\", Edad[i])\r\n\r\ndef main():\r\n    global N, Nom, DNI, Edad, AuxE, AuxN, AuxD\r\n    N = int(input(\"Cuantos datos ingresara?: \"))\r\n    for i in range(N):\r\n        print(\"\\nAlumno\", i+1)\r\n        Nom[i] = input(\"Nombre: \")\r\n        DNI[i] = input(\"DNI: \")\r\n        Edad[i] = int(input(\"Edad: \"))\r\n\r\n    print(\"Mostrando Nombre, DNI y Edad: \")\r\n    mostrar()\r\n    #*************************************************************\r\n    #ORDENANDO POR EDAD EN FORMA ASCENDENTE\r\n    for i in range(N-1):\r\n        for j in range(i+1, N):\r\n            if Edad[i] > Edad[j]:\r\n                organizar(i, j)\r\n\r\n    print(\"\\n\\nMostrando orden ascendente por edad: \")\r\n    mostrar()\r\n    #*************************************************************\r\n    #ORDENANDO POR NOMBRE EN FORMA ASCENDEnTE\r\n    for i in range(N-1):\r\n        for j in range(i+1, N):\r\n            if Nom[i] > Nom[j]:\r\n                organizar(i, j)\r\n\r\n    print(\"\\n\\nMostrando orden ascendente por Nombre: \")\r\n    mostrar()\r\n\r\nif __name__ == \"__main__\":\r\n    main()",
      "subcategoty": 1
    }
  },
  {
    "model": "exercises.exercises",
    "pk": 9,
    "fields": {
      "category": 1,
      "title": "Funciones con una Matriz",
      "desc": "Dessarrollar un algoritmo que permita ingresar datos a una matriz (cuyas dimensiones serán definidas por el usuario) y realizar múltiples funciones con los datos de esta",
      "cpp_snippet": "//ARREGLOS BIDIMENSIONALES\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(int argc, char** argv) \r\n{\r\n\tint A[10][10],B[100],NfA=0,NcA=0,i,j,op,\r\n\tSTotal,DiagSec,x,\r\n\tTraza,fil,Sfil, colm, Scolm,T[10][10],aux,N;\r\n\tchar resp;\r\n\t\r\n\tdo{\r\n\t   system(\"cls\");\r\n\t   cout<<\"|---------- MENU --------------------|\\n\";\r\n\t   cout<<\"| 1) INGRESO DE DATOS................|\\n\"; \t\r\n\t   cout<<\"| 2) MOSTRAR MATRIZ..................|\\n\";\t\t\r\n\t   cout<<\"| 3) SUMAR TODA LA MATRIZ............|\\n\";\t\r\n\t   cout<<\"| 4) TRAZA DE LA MATRIZ..............|\\n\";\r\n\t   cout<<\"| 5) SUMA DE LA DIAGONAL SECUNDARIA..|\\n\";\r\n\t   cout<<\"| 6) SUMA DE UNA FILA................|\\n\";\t\r\n\t   cout<<\"| 7) SUMA DE UNA COLUMNA.............|\\n\";\t\r\n\t   cout<<\"| 8) CONVERTIR A CERO TRIANG INFERIOR|\\n\";\t\r\n\t   cout<<\"| 9) CONVERTIR A CERO TRIANG SUPEROR.|\\n\";\t\t   \r\n\t   cout<<\"| 10) TRANSPUESTA DE LA MATRIZ.......|\\n\";\r\n\t   cout<<\"| 11) ORDENA ASCENDENTE LA MATRIZ....|\\n\";\t\r\n\t   cout<<\"\\n Elija una opcion por favor: \";\r\n\t   cin>>op;\r\n\t   switch(op)\r\n\t   {\r\n\t   \tcase 1: \r\n\t   \t\tsystem(\"cls\");\r\n\t   \t\tcout<<\"INGRESO DE DATOS A LA MATRIZ\\n\";\r\n\t   \t\t do{\r\n\t\t\t\tcout<<\"Cuantas filas?: \";\r\n\t   \t\t\tcin>>NfA;\r\n\t   \t      }while(NfA<1||NfA>10);\r\n\t   \t     do{\r\n\t\t\t\tcout<<\"Cuantas columnas?: \";\r\n\t   \t\t\tcin>>NcA;\r\n\t   \t\t   }while(NcA<1||NcA>10);\r\n\t   \t\tfor(i=0;i<NfA;i++)\r\n\t\t\t  for(j=0;j<NcA;j++)\r\n\t\t\t  { \r\n\t\t\t    cout<<\"A[\"<<i<<\",\"<<j<<\"]: \";    \r\n\t\t\t    cin>>A[i][j];\r\n\t\t\t    \r\n\t\t\t  }\r\n\r\n\t   \t\tbreak;\r\n\t   \tcase 2:\r\n\t   \t\tif(NfA>0 && NcA>0)\r\n\t   \t\t {\r\n\t   \t\t   for(i=0;i<NfA;i++)\r\n\t   \t\t   {\r\n\t\t\t\t\r\n\t\t\t    for(j=0;j<NcA;j++)\r\n\t\t\t     cout<<A[i][j]<<\"  \";\r\n\t\t\t\tcout<<endl; \t\r\n\t\t\t   }\r\n\t\t\t }\r\n\t\t\telse\r\n\t\t\t {\r\n\t\t\t   cout<<\"No hay datos para mostrar...\"; \r\n\t\t\t   break;\r\n\t\t\t }\r\n\t\t   \tbreak;\t\r\n\t\tcase 3:\r\n\t\t\tif(NfA>0 && NcA>0)\r\n\t   \t\t {\r\n\t   \t\t   STotal=0;\r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t   \t\t    for(j=0;j<NcA;j++)\r\n\t\t\t     STotal=STotal+A[i][j];\t  //STotal+=A[i][j];\r\n\t\t\t\r\n\t\t\t   cout<<\"\\nLA SUMA DE TODA LA MATRIZ ES: \"<<STotal;\t \t\t\t   \r\n\t\t\t }\r\n\t\t\telse\r\n\t\t\t {\r\n\t\t\t   cout<<\"No hay datos para sumar...\"; \r\n\t\t\t   break;\r\n\t\t\t }\r\n\t\t\tbreak;\r\n\t\tcase 4:\t\r\n\t\t\tsystem(\"cls\");\r\n\t\t\tif((NfA>1 && NcA>1)&& (NfA==NcA))\r\n\t   \t\t {\r\n\t   \t\t   Traza=0;\r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t   \t\t    for(j=0;j<NcA;j++)\r\n\t   \t\t     if(i==j)\r\n\t\t\t      Traza=Traza+A[i][j];\r\n\t\t\t\r\n\t\t\t   cout<<\"\\nLA TRAZA DE LA MATRIZ ES: \"<<Traza;\t \t\t\t   \r\n\t\t\t }\r\n\t\t\telse\r\n\t\t\t {\r\n\t\t\t   cout<<\"No hay datos para hallar la Traza...\"; \r\n\t\t\t   break;\r\n\t\t\t }\r\n\t\t\tbreak;\r\n\t\tcase 5:\t\r\n\t\t\tsystem(\"cls\");\r\n\t\t\tif((NfA>1 && NcA>1)&& (NfA==NcA))\r\n\t   \t\t {\r\n\t   \t\t   DiagSec=0;\r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t   \t\t    for(j=0;j<NcA;j++)\r\n\t   \t\t     if((i+j)==(NfA-1))\r\n\t\t\t      DiagSec=DiagSec+A[i][j];\r\n\t\t\t\r\n\t\t\t   cout<<\"\\nLA SUMA DE LA DIAGONAL SECUNDARIA ES: \"<<DiagSec;\t \t\t\t   \r\n\t\t\t }\r\n\t\t\telse\r\n\t\t\t {\r\n\t\t\t   cout<<\"No hay datos para hallar la Suma...\"; \r\n\t\t\t   break;\r\n\t\t\t }\r\n\t\t\tbreak;\r\n\t\tcase 6:\t\r\n\t\t\tsystem(\"cls\");\r\n\t\t\tif((NfA>1 && NcA>1))\r\n\t   \t\t {\r\n\t   \t\t   do{\r\n\t\t\t\t  cout<<\"Indique FILA a sumar: \";\r\n\t   \t\t      cin>>fil;\r\n\t   \t\t     }while(fil<=0 || fil>=NfA);\r\n\t   \t\t     \r\n\t\t\t   Sfil=0;\r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t   \t\t    for(j=0;j<NcA;j++)\r\n\t   \t\t     if(fil==i)\r\n\t\t\t      Sfil=Sfil+A[i][j];\r\n\t\t\t\r\n\t\t\t   cout<<\"\\nLA SUMA DE LA FILA\"<<fil<<\" ES: \"<<Sfil;\t \t\t\t   \r\n\t\t\t }\r\n\t\t\telse\r\n\t\t\t {\r\n\t\t\t   cout<<\"No hay datos para hallar la Suma...\"; \r\n\t\t\t   break;\r\n\t\t\t }\r\n\t\t\tbreak;\t\t\t\r\n\t\tcase 7:\t\r\n\t\t\tsystem(\"cls\");\r\n\t\t\tif((NfA>1 && NcA>1))\r\n\t   \t\t {\r\n\t   \t\t   do{\r\n\t\t\t\t  cout<<\"Indique columna a sumar: \";\r\n\t   \t\t      cin>>colm;\r\n\t   \t\t     }while(colm<=0 || colm>=NcA);\r\n\t   \t\t     \r\n\t\t\t   Scolm=0;\r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t   \t\t    for(j=0;j<NcA;j++)\r\n\t   \t\t     if(colm==j)\r\n\t\t\t      Scolm=Scolm+A[i][j];\r\n\t\t\t\r\n\t\t\t   cout<<\"\\nLA SUMA DE LA COLUMNA \"<<colm<<\" ES: \"<<Scolm;\t \t\t\t   \r\n\t\t\t }\r\n\t\t\telse\r\n\t\t\t {\r\n\t\t\t   cout<<\"No hay datos para hallar la Suma...\"; \r\n\t\t\t   break;\r\n\t\t\t }\r\n\t\t\tbreak;\t\r\n\t\tcase 8:\t\r\n\t\t\tsystem(\"cls\");\r\n\t\t\tif((NfA>0 && NcA>0)&& (NfA==NcA))\r\n\t   \t\t {\r\n\t   \t\t   \r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t   \t\t    for(j=0;j<NcA;j++)\r\n\t   \t\t     if(i>j)\r\n\t   \t\t       A[i][j] = 0;  \r\n\t\t\t   \r\n\t\t\t   cout<<\"\\nTRIANGULAR INFERIOR EN CERO:\\n\";\r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t\t\t   { cout<<endl;\r\n\t\t\t     for(j=0;j<NcA;j++)   \r\n\t\t\t      cout<<A[i][j]<<\"  \";\r\n\t\t       }\r\n\t\t\t }\r\n\t\t\telse\r\n\t\t\t {\r\n\t\t\t   cout<<\"No hay datos para hallar la Triangular Inferior...\"; \r\n\t\t\t   break;\r\n\t\t\t }\r\n\t\t\tbreak;\t\t\r\n\t\tcase 9:\t\r\n\t\t\tsystem(\"cls\");\r\n\t\t\tif((NfA>0 && NcA>0)&& (NfA==NcA))\r\n\t   \t\t {\r\n\t   \t\t   \r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t   \t\t    for(j=0;j<NcA;j++)\r\n\t   \t\t     if(i<j)\r\n\t   \t\t       A[i][j] = 0;  \r\n\t\t\t   \r\n\t\t\t   cout<<\"\\nTRIANGULAR SUPERIOR EN CERO:\\n\";\r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t\t\t   { cout<<endl;\r\n\t\t\t     for(j=0;j<NcA;j++)   \r\n\t\t\t      cout<<A[i][j]<<\"  \";\r\n\t\t       }\r\n\t\t\t }\r\n\t\t\telse\r\n\t\t\t {\r\n\t\t\t   cout<<\"No hay datos para hallar la Triangular superior...\"; \r\n\t\t\t   break;\r\n\t\t\t }\r\n\t\t\tbreak;\t\r\n\t\tcase 10:\t\r\n\t\t\tsystem(\"cls\");\r\n\t\t\tif((NfA>0 && NcA>0))\r\n\t   \t\t {\r\n\t   \t\t   \r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t   \t\t    for(j=0;j<NcA;j++)\r\n\t   \t\t     T[j][i]=A[i][j];  \r\n\t\t\t   \r\n\t\t\t   cout<<\"\\nMATRIZ A:\\n\";\r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t\t\t   { cout<<endl;\r\n\t\t\t     for(j=0;j<NcA;j++)   \r\n\t\t\t      cout<<A[i][j]<<\"  \";\r\n\t\t       }\r\n\t   \t\t   cout<<\"\\nTRANSPUESTA DE LA MATRIZ:\\n\";\r\n\t\t\t   for(i=0;i<NcA;i++)\r\n\t\t\t   { cout<<endl;\r\n\t\t\t     for(j=0;j<NfA;j++)   \r\n\t\t\t      cout<<T[i][j]<<\"  \";\r\n\t\t       }\r\n\t\t\t }\r\n\t\t\telse\r\n\t\t\t {\r\n\t\t\t   cout<<\"No hay datos para hallar la Suma...\"; \r\n\t\t\t   break;\r\n\t\t\t }\r\n\t\t\tbreak;\t\r\n\t\tcase 11:\t\r\n\t\t\tsystem(\"cls\");\r\n\t\t\t\r\n\t\t\tif((NfA>1 && NcA>1))\r\n\t   \t\t {\r\n\t   \t\t    //PASANDO MATRIZ A A VECTOR B   \r\n\t\t\t   x=0;\r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t   \t\t    for(j=0;j<NcA;j++)\r\n\t   \t\t     {\t\t\t\t\t\r\n\t   \t\t       B[x] = A[i][j];  \r\n\t   \t\t       x++;\r\n\t   \t\t     }\r\n\t\t\t  \r\n\t\t\t  //APLICANDO BURBUJA\r\n\t\t\t  N=NfA*NcA;\r\n\t\t\t  for(i=0;i<N-1;i++)\r\n\t\t\t   for(j=i+1;j<N;j++)\r\n\t\t\t    if(B[i]>B[j])\r\n\t\t\t      {\r\n\t\t\t      \taux = B[i];\r\n\t\t\t      \tB[i]= B[j];\r\n\t\t\t      \tB[j]=aux;\r\n\t\t\t\t  }\r\n\t\t\t  //PASANDO VECTOR B A MATRIZ A\r\n\t\t\t  x=0;\r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t   \t\t    for(j=0;j<NcA;j++)\r\n\t   \t\t     {\t\t\t\t\t\r\n\t   \t\t       A[i][j]=B[x];  \r\n\t   \t\t       x++;\r\n\t   \t\t     }\r\n\t\t\t  //MOSTRAR MATRIZ A ORDENADA\r\n\t\t\t  cout<<\"\\nMATRIZ A ORDENADA ASCENDENTEMENTE:\\n\";\r\n\t\t\t   for(i=0;i<NfA;i++)\r\n\t\t\t   { cout<<endl;\r\n\t\t\t     for(j=0;j<NcA;j++)   \r\n\t\t\t      cout<<A[i][j]<<\"  \";\r\n\t\t       }\r\n\t   \t\t   \r\n\t\t\t }\r\n\t\t\telse\r\n\t\t\t {\r\n\t\t\t   cout<<\"No hay datos para hallar la Suma...\"; \r\n\t\t\t   break;\r\n\t\t\t }\r\n\t\t\tbreak;\t\t\t\t\t\t\t\r\n\t\tdefault:cout<<\"\\nError esa opcion no existe...\";\t   \t\r\n\t   \t\t\r\n\t   }\r\n\t   \r\n\t   cout<<\"\\nDesea continuar s/n?: \";\r\n\t   cin>>resp;\t\r\n\t  }while(resp=='S'||resp=='s');\r\n\t\r\n\tcout<<\"\\nGracias totales...\";\r\n\treturn 0;\r\n}",
      "py_snippet": "from os import system\r\nimport random\r\n\r\n# Variables\r\nT = []\r\nM = [] \r\nA = []\r\nf, c = 0, 0\r\n\r\ndef borrarTerminal():\r\n    system('clear') # Cambiar a 'cls' en Windows\r\n\r\ndef ingresarDatos():\r\n    global M, T, A, f, c\r\n    borrarTerminal()\r\n    print('----Ingresar Datos a la Matriz----')\r\n    f = int(input('Cantidad de Filas: '))\r\n    c = int(input('Cantidad de Columnas: '))\r\n    M = [[random.randint(1,100) for _ in range(c)] for _ in range(f)]\r\n    A = [[M[i][j] for j in range(c)] for i in range(f)]\r\n    T = [[M[i][j] for i in range(f)] for j in range(c)]\r\n    print('\\nMatriz rellenada con números aleatorios de 1 a 100\\n')\r\n\r\ndef mostrarDatos(matriz):\r\n    for i in matriz:\r\n        print(' '.join(f'[{elemento}]' for elemento in i))\r\n    print('\\n')\r\n\r\ndef sumarDatos():\r\n    global M\r\n    borrarTerminal()\r\n    print('----Sumar Datos de la Matriz----')\r\n    total = sum(sum(x) for x in M)\r\n    print(f'\\nLa suma de los datos en la matriz es: {total}\\n')\r\n\r\ndef sumarFila():\r\n    global M\r\n    borrarTerminal()\r\n    print('----Sumar Fila----')\r\n    print(f'Filas disponibles: {f}\\n')\r\n    mostrarDatos(M)\r\n    x = int(input('Escoga una fila: '))\r\n    while x not in range(f+1):\r\n        x = int(input('Por favor, ingrese una fila disponible: '))\r\n    total = sum(M[x-1])\r\n    print(f'\\n\\nLa suma de los datos en la fila {x} es: {total}\\n')\r\n\r\ndef sumarColumna():\r\n    global M\r\n    borrarTerminal()\r\n    print('----Sumar Columna----')\r\n    print(f'Columnas disponibles: {c}\\n')\r\n    mostrarDatos(M)\r\n    x = int(input('Escoga una Columna: '))\r\n    while x not in range(c+1):\r\n        x = int(input('Por favor, ingrese una columna disponible: '))\r\n    total = sum(elemento[x-1] for elemento in M)\r\n    print(f'\\n\\nLa suma de los datos en la columna {x} es: {total}\\n')\r\n\r\ndef traza():\r\n    global M\r\n    borrarTerminal()\r\n    print('----Traza de la Matriz---')\r\n    if f!=c:\r\n        print('La matriz no es simétrica\\n')\r\n    else:\r\n        mostrarDatos()\r\n        traza = 0\r\n        for _ in range(f):\r\n            traza += M[_][_]\r\n            _ += 1\r\n        print(f'La traza de la matriz es: {traza}\\n')\r\n\r\ndef diagInversa():\r\n    global M\r\n    borrarTerminal()\r\n    print('----Diagonal Inversa de la Matriz---')\r\n    if f!=c:\r\n        print('La matriz no es simétrica\\n')\r\n    else:\r\n        mostrarDatos(M)\r\n        diag = 0\r\n        a = f-1\r\n        for _ in range(f):\r\n            diag += M[_][a]\r\n            _ += 1\r\n            a -= 1\r\n        print(f'La diagonal inversa de la matriz es: {diag}\\n')\r\n\r\ndef triangInf():\r\n    global M\r\n    borrarTerminal()\r\n    print('----Triangular Inferior a Cero----')\r\n    if f!=c:\r\n        print('La matriz no es simétrica\\n')\r\n    else:\r\n        mostrarDatos(M)\r\n        tr_inf = 0\r\n        for i in range(c):\r\n            for j in range(f):\r\n                if i > j:\r\n                    tr_inf += M[i][j]\r\n        print(f'Valor de la triangular inferior: {tr_inf}\\n')\r\n\r\ndef triangSup():\r\n    global M\r\n    borrarTerminal()\r\n    print('----Triangular Superior a Cero----')\r\n    if f!=c:\r\n        print('La matriz no es simétrica\\n')\r\n    else:\r\n        mostrarDatos(M)\r\n        tr_inf = 0\r\n        for i in range(c):\r\n            for j in range(f):\r\n                if i < j:\r\n                    tr_inf += M[i][j]\r\n        print(f'Valor de la triangular superior: {tr_inf}\\n')\r\n\r\ndef traspuesta():\r\n    global T, M\r\n    borrarTerminal()\r\n    print('----Traspuesta de la Matriz----')\r\n    mostrarDatos(T)\r\n    print('\\n')\r\n    print('----Matriz Original----')\r\n    mostrarDatos(M)\r\n\r\ndef ordenAsc():\r\n    global M, A\r\n    borrarTerminal()\r\n    a = [i for fila in M for i in fila]\r\n    a_orden = sorted(a)\r\n    x = 0\r\n    for i in range(f):\r\n        for j in range(c):\r\n            A[i][j] =  a_orden[x]\r\n            x += 1\r\n    print('----Matriz Ordenada----')\r\n    mostrarDatos(A)\r\n    print('\\n----Matriz Original----')\r\n    mostrarDatos(M)\r\n\r\ndef menu(op):\r\n    global M\r\n    while op in ['s','S']:\r\n        borrarTerminal()\r\n        print('----Menu de Matriz----')\r\n        print('1) Ingreso de Datos')\r\n        print('2) Mostrar Matriz')\r\n        print('3) Suma de la Matriz')\r\n        print('4) Suma de una Fila')\r\n        print('5) Suma de una Columna')\r\n        print('6) Traza de la Matriz')\r\n        print('7) Suma Diagonal Secundaria')\r\n        print('8) Triangular Inferior a Cero')\r\n        print('9) Triangular Superior a Cero')\r\n        print('10) Traspuesta de la Matriz')\r\n        print('11) Orden Ascendente de la Matriz')\r\n        op = input('\\nEscoja una opción: ')\r\n        match op:\r\n            case '1':\r\n                ingresarDatos()\r\n            case '2':\r\n                borrarTerminal()\r\n                print('----Mostrando Datos de la Matriz----')\r\n                mostrarDatos(M)\r\n            case '3':\r\n                sumarDatos()\r\n            case '4':\r\n                sumarFila()\r\n            case '5':\r\n                sumarColumna()\r\n            case '6':\r\n                traza()\r\n            case '7':\r\n                diagInversa()\r\n            case '8':\r\n                triangInf()\r\n            case '9':\r\n                triangSup()\r\n            case '10':\r\n                traspuesta()\r\n            case '11':\r\n                ordenAsc()\r\n            case _:\r\n                print('Opción no válida\\n')\r\n        op = input('Desea continuar?(s/n): ')\r\n\r\nmenu('s')",
      "subcategoty": null
    }
  },
  {
    "model": "exercises.exercises",
    "pk": 10,
    "fields": {
      "category": 3,
      "title": "Estructura de Alumnos",
      "desc": "Utilizando una estructura de datos \"struct\" cree un menú que permita ingresar: Código, Nombre, Edad y Promedio de una cantidad N de alumnos.",
      "cpp_snippet": "#include <iostream>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nstruct alumno{\r\n    int Cod[10];\r\n    string nombre;\r\n    int edad;\r\n    float promedio;\r\n};\r\n\r\nint main(){\r\n    alumno alu[50];\r\n    char resp;\r\n    int n = 0;\r\n\r\n    do{\r\n        system(\"clear\");\r\n        cout<<\"-------- MENU --------\\n\";\r\n        cout<<\"1. Ingresar datos\\n\";\r\n        cout<<\"2. Mostrar datos\\n\";\r\n        cout<<\"3. Salir\\n\\n\";\r\n        cin>>resp;\r\n\r\n        switch (resp){\r\n            case '1':\r\n                system(\"clear\");\r\n                cout<<\"-------- INGRESAR DATOS --------\\n\";\r\n                cout<<\"Cuantos alumnos desea ingresar: (0 para cancelar)\";\r\n                cin>>n;\r\n                while(n < 0 || n > 50){\r\n                    cout<<\"Ingrese un numero entre 1 y 50: \";\r\n                    cin>>n;\r\n                }\r\n                for (int i = 0; i < n; i++){\r\n                    cout<<\"Ingrese el codigo del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].Cod[10];\r\n                    cout<<\"Ingrese el nombre del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].nombre;\r\n                    cout<<\"Ingrese la edad del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].edad;\r\n                    cout<<\"Ingrese el promedio del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].promedio;\r\n                    cout<<\"\\n\";\r\n                }\r\n                break;\r\n            case '2':\r\n                system(\"clear\");\r\n                cout<<\"-------- MOSTRAR DATOS --------\\n\";\r\n                if(n == 0){\r\n                    cout<<\"No hay datos que mostrar\\n\";\r\n                    break;\r\n                }\r\n                for (int i = 0; i < n; i++){\r\n                    cout<<\"Codigo del alumno \"<<i+1<<\": \"<<alu[i].Cod<<endl;\r\n                    cout<<\"Nombre del alumno \"<<i+1<<\": \"<<alu[i].nombre<<endl;\r\n                    cout<<\"Edad del alumno \"<<i+1<<\": \"<<alu[i].edad<<endl;\r\n                    cout<<\"Promedio del alumno \"<<i+1<<\": \"<<alu[i].promedio<<endl;\r\n                    cout<<\"\\n\";\r\n                }\r\n                break;\r\n            case '3':\r\n                system(\"clear\");\r\n                cout<<\"-------- SALIR --------\\n\";\r\n                break;\r\n            default:\r\n                system(\"clear\");\r\n                cout<<\"-------- ERROR --------\\n\";\r\n                break;\r\n        }\r\n\r\n        cout<<\"\\nDesea continuar? (s/n): \";\r\n        cin>>resp;\r\n\r\n    }while (resp == 's' || resp == 'S');\r\n    \r\n}",
      "py_snippet": "from os import system\r\n\r\nclass Alumno:\r\n    def __init__(self):\r\n        self.Cod = 0\r\n        self.nombre = \"\"\r\n        self.edad = 0\r\n        self.promedio = 0.0\r\n\r\nalumnos = [Alumno() for _ in range(50)]\r\n\r\nwhile True:\r\n    system('clear')\r\n    print(\"-------- MENU --------\")\r\n    print(\"1. Ingresar datos\")\r\n    print(\"2. Mostrar datos\")\r\n    print(\"3. Salir\\n\")\r\n\r\n    resp = input(\"Ingrese su opción: \")\r\n\r\n    match resp:\r\n        case '1':\r\n            system('clear')\r\n            print('-------- INGRESAR DATOS --------')\r\n            n = int(input(\"Cuantos alumnos desea ingresar (0 para cancelar): \"))\r\n            while n < 0 or n > 50:\r\n                n = int(input(\"Ingrese un numero entre 1 y 50: \"))\r\n\r\n            for i in range(n):\r\n                print(f\"Ingrese el codigo del alumno {i+1}: \", end=\"\")\r\n                alumnos[i].Cod = int(input())\r\n                print(f\"Ingrese el nombre del alumno {i+1}: \", end=\"\")\r\n                alumnos[i].nombre = input()\r\n                print(f\"Ingrese la edad del alumno {i+1}: \", end=\"\")\r\n                alumnos[i].edad = int(input())\r\n                print(f\"Ingrese el promedio del alumno {i+1}: \", end=\"\")\r\n                alumnos[i].promedio = float(input())\r\n                print()\r\n        case '2':\r\n            system('clear')\r\n            print(\"-------- MOSTRAR DATOS --------\")\r\n            if not any(alumno.Cod for alumno in alumnos):\r\n                print(\"No hay datos que mostrar\\n\")\r\n            else:\r\n                for i, alumno in enumerate(alumnos):\r\n                    if alumno.Cod:\r\n                        print(f\"Codigo del alumno {i+1}: {alumno.Cod}\")\r\n                        print(f\"Nombre del alumno {i+1}: {alumno.nombre}\")\r\n                        print(f\"Edad del alumno {i+1}: {alumno.edad}\")\r\n                        print(f\"Promedio del alumno {i+1}: {alumno.promedio}\")\r\n                        print()\r\n        case '3':\r\n            system('clear')\r\n            print(\"-------- SALIR --------\")\r\n        case _:\r\n            system('clear')\r\n            print(\"-------- ERROR --------\")\r\n\r\n    resp = input(\"\\nDesea continuar? (s/n): \")\r\n    if resp.lower() != 's':\r\n        break",
      "subcategoty": null
    }
  },
  {
    "model": "exercises.exercises",
    "pk": 11,
    "fields": {
      "category": 3,
      "title": "Estructura de Alumnos Mejorada",
      "desc": "Agregar las funciones de:\r\n\r\n1. Mostrar al Alumno de Menor Edad\r\n2. Ordenar (Por cada una de las características)\r\n3. Buscar por Código\r\n4. Atender (Por cola o por fila)",
      "cpp_snippet": "#include <iostream>\r\n#include <string>\r\n#include <algorithm>\r\n#include <locale>\r\n\r\nusing namespace std;\r\n\r\nstruct alumno{\r\n    int Cod;\r\n    string nombre;\r\n    string apellido;\r\n    int edad;\r\n    float promedio;\r\n};\r\n\r\nint main(){\r\n    setlocale(LC_ALL, \"es_ES.UTF-8\");\r\n\r\n    alumno alu[50];\r\n    char resp, resp2;\r\n    int n = 0, menor, ubi = 0, extras, codbus;\r\n\r\n    do{\r\n        system(\"clear\");\r\n        cout<<\"-------- MENU --------\\n\";\r\n        cout<<\"1. Ingresar datos\\n\";\r\n        cout<<\"2. Mostrar datos\\n\";\r\n        cout<<\"3. Ingresar más datos\\n\";\r\n        cout<<\"4. Mostrar Alumno de Menor Edad\\n\";\r\n        cout<<\"5. Ordenar\\n\";\r\n        cout<<\"6. Buscar por Código\\n\";\r\n        cout<<\"7. Atender\\n\";\r\n        cout<<\"9. Salir\\n\";\r\n        cin>>resp;\r\n\r\n        switch (resp){\r\n            case '1':\r\n                system(\"clear\");\r\n                cout<<\"-------- INGRESAR DATOS --------\\n\\n\";\r\n                cout<<\"¿Cuántos alumnos desea ingresar: (0 para cancelar)  \";\r\n                cin>>n;\r\n                cout<<\"\\n\";\r\n                while(n < 0 || n > 50){\r\n                    cout<<\"Ingrese un numero entre 1 y 50: \";\r\n                    cin>>n;\r\n                }\r\n                for (int i = 0; i < n; i++){\r\n                    cout<<\"Ingrese el código del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].Cod;\r\n                    cout<<\"Ingrese el nombre del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].nombre;\r\n                    cout<<\"Ingrese el apellido del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].apellido;\r\n                    cout<<\"Ingrese la edad del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].edad;\r\n                    cout<<\"Ingrese el promedio del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].promedio;\r\n                    cout<<\"\\n\";\r\n                }\r\n                break;\r\n            case '2':\r\n                system(\"clear\");\r\n                cout<<\"-------- MOSTRAR DATOS --------\\n\\n\";\r\n                if(n == 0){\r\n                    cout<<\"No hay alumnos que mostrar\\n\";\r\n                    break;\r\n                }\r\n                cout<<\"\\n\";\r\n                for (int i = 0; i < n; i++){\r\n                    cout<<\"Código del alumno \"<<i+1<<\": \"<<alu[i].Cod<<endl;\r\n                    cout<<\"Nombre del alumno \"<<i+1<<\": \"<<alu[i].nombre<<endl;\r\n                    cout<<\"Apellido del alumno \"<<i+1<<\": \"<<alu[i].apellido<<endl;\r\n                    cout<<\"Edad del alumno \"<<i+1<<\": \"<<alu[i].edad<<endl;\r\n                    cout<<\"Promedio del alumno \"<<i+1<<\": \"<<alu[i].promedio<<endl;\r\n                    cout<<\"\\n\";\r\n                }\r\n                break;\r\n            case '3':\r\n                system(\"clear\");\r\n                cout<<\"-------- INGRESAR MÁS DATOS --------\\n\\n\";\r\n                if(n == 0){\r\n                    cout<<\"Por favor, ingrese datos antes\\n\";\r\n                    break;\r\n                }\r\n                cout<<\"¿Cuántos datos desea adicionar: \";\r\n                cin>>extras;\r\n                for (int i = n; i < n+extras; i++){\r\n                    cout<<\"Ingrese el código del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].Cod;\r\n                    cout<<\"Ingrese el nombre del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].nombre;\r\n                    cout<<\"Ingrese el apellido del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].apellido;\r\n                    cout<<\"Ingrese la edad del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].edad;\r\n                    cout<<\"Ingrese el promedio del alumno \"<<i+1<<\": \";\r\n                    cin>>alu[i].promedio;\r\n                    cout<<\"\\n\";\r\n                }\r\n                n += extras;\r\n                break;\r\n            case '4':\r\n                system(\"clear\");\r\n                cout<<\"-------- MENOR EDAD --------\\n\\n\";\r\n                if(n < 2){\r\n                    cout<<\"No hay alumnos que comparar\\n\";\r\n                    break;\r\n                }\r\n                menor = alu[0].edad;\r\n                for (int i = 1; i < n; i++){\r\n                    if (menor > alu[i].edad){\r\n                        menor = alu[i].edad;\r\n                        ubi = i;\r\n                    }\r\n                }\r\n                cout<<\"Mostrando Alumno con la menor Edad\"<<endl;\r\n                cout<<\"Código del alumno \"<<ubi+1<<\": \"<<alu[ubi].Cod<<endl;\r\n                cout<<\"Nombre del alumno \"<<ubi+1<<\": \"<<alu[ubi].nombre<<endl;\r\n                cout<<\"Apellido del alumno \"<<ubi+1<<\": \"<<alu[ubi].apellido<<endl;\r\n                cout<<\"Edad del alumno \"<<ubi+1<<\": \"<<alu[ubi].edad<<endl;\r\n                cout<<\"Promedio del alumno \"<<ubi+1<<\": \"<<alu[ubi].promedio<<endl;\r\n                cout<<\"\\n\";\r\n                break; \r\n            case '5':\r\n                system(\"clear\");\r\n                cout<<\"-------- ORDENAR --------\\n\\n\";\r\n                if(n < 2){\r\n                    cout<<\"No hay alumnos suficientes para ordenar\\n\";\r\n                    break;\r\n                }\r\n                cout<<\"Por que campo desea ordenar?\\n\";\r\n                cout<<\"1. Código\\n\";\r\n                cout<<\"2. Nombre\\n\";\r\n                cout<<\"3. Apellido\\n\";\r\n                cout<<\"4. Edad\\n\";\r\n                cout<<\"5. Promedio\\n\";\r\n                cin>>resp2;\r\n                cout<<\"\\n\";\r\n                switch (resp2){\r\n                    case '1':\r\n                        for (int i = 0; i < n-1; i++){\r\n                            for (int j = i+1; j < n; j++){\r\n                                if (alu[i].Cod > alu[j].Cod)\r\n                                    swap(alu[i], alu[j]);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case '2':\r\n                        for (int i = 0; i < n-1; i++){\r\n                            for (int j = i+1; j < n; j++){\r\n                                if (alu[i].nombre > alu[j].nombre)\r\n                                    swap(alu[i], alu[j]);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case '3':\r\n                        for (int i = 0; i < n-1; i++){\r\n                            for (int j = i+1; j < n; j++){\r\n                                if (alu[i].apellido > alu[j].apellido)\r\n                                    swap(alu[i], alu[j]);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case '4':\r\n                        for (int i = 0; i < n-1; i++){\r\n                            for (int j = i+1; j < n; j++){\r\n                                if (alu[i].edad > alu[j].edad)\r\n                                    swap(alu[i], alu[j]);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case '5':\r\n                        sort(alu, alu+n, [](alumno a, alumno b){\r\n                            return a.promedio < b.promedio;\r\n                        });\r\n                        break;\r\n                    default:\r\n                        system(\"clear\");\r\n                        cout<<\"-------- OPCIÓN NO VÁLIDA --------\\n\";\r\n                        break;\r\n                }\r\n                for (int i = 0; i < n; i++){\r\n                    cout<<\"Código del alumno \"<<i+1<<\": \"<<alu[i].Cod<<endl;\r\n                    cout<<\"Nombre del alumno \"<<i+1<<\": \"<<alu[i].nombre<<endl;\r\n                    cout<<\"Apellido del alumno \"<<i+1<<\": \"<<alu[i].apellido<<endl;\r\n                    cout<<\"Edad del alumno \"<<i+1<<\": \"<<alu[i].edad<<endl;\r\n                    cout<<\"Promedio del alumno \"<<i+1<<\": \"<<alu[i].promedio<<endl;\r\n                    cout<<\"\\n\";\r\n                }  \r\n                break; \r\n            case '6':\r\n                system(\"clear\");\r\n                cout<<\"-------- BUSCAR POR CÓDIGO --------\\n\\n\";\r\n                if(n == 0){\r\n                    cout<<\"No hay alumnos que buscar\\n\";\r\n                    break;\r\n                }\r\n                cout<<\"Ingrese el código a buscar: \";\r\n                cin>>codbus;\r\n                for (int i = 0; i < n; i++){\r\n                    if (alu[i].Cod == codbus){\r\n                        cout<<\"código del alumno \"<<i+1<<\": \"<<alu[i].Cod<<endl;\r\n                        cout<<\"Nombre del alumno \"<<i+1<<\": \"<<alu[i].nombre<<endl;\r\n                        cout<<\"Apellido del alumno \"<<i+1<<\": \"<<alu[i].apellido<<endl;\r\n                        cout<<\"Edad del alumno \"<<i+1<<\": \"<<alu[i].edad<<endl;\r\n                        cout<<\"Promedio del alumno \"<<i+1<<\": \"<<alu[i].promedio<<endl;\r\n                        cout<<\"\\n\";\r\n                        break;\r\n                    }\r\n                } \r\n                cout<<\"No se encontro el código\\n\";\r\n                break;\r\n            case '7':\r\n                cout<<\"-------- ATENDER --------\\n\\n\";\r\n                if(n == 0){\r\n                    cout<<\"No hay alumnos que atender\\n\";\r\n                    break;\r\n                }\r\n                cout<<\"¿Atención a cola o fila?\\n\";\r\n                cout<<\"1. Cola\\n\";\r\n                cout<<\"2. Fila\\n\";\r\n                cin>>resp2;\r\n                cout<<\"\\n\";\r\n                switch (resp2){\r\n                    case '1':\r\n                        cout<<\"Atendiendo al primer estudiante: \"<<alu[0].nombre<<\" \"<<alu[0].apellido<<endl;\r\n                        for (int i = 0; i < n-1; i++){\r\n                            alu[i] = alu[i+1];\r\n                        }\r\n                        n--;\r\n                        break;\r\n                    case '2':\r\n                        cout<<\"Atendiendo al último estudiante: \"<<alu[n-1].nombre<<\" \"<<alu[n-1].apellido<<endl;\r\n                        n--;\r\n                        break;\r\n                    default:\r\n                        system(\"clear\");\r\n                        cout<<\"-------- OPCIÓN NO VÁLIDA --------\\n\";\r\n                        break;\r\n                }\r\n            case '10':\r\n                system(\"clear\");\r\n                cout<<\"-------- SALIR --------\\n\\n\";\r\n                break;\r\n            default:\r\n                system(\"clear\");\r\n                cout<<\"-------- ERROR --------\\n\\n\";\r\n                break;\r\n        }\r\n        cout<<\"\\nDesea continuar? (s/n): \";\r\n        cin>>resp;\r\n    }while (resp == 's' || resp == 'S');\r\n}",
      "py_snippet": "import os\r\n\r\nclass Alumno:\r\n    def __init__(self, cod, nombre, apellido, edad, promedio):\r\n        self.cod = cod\r\n        self.nombre = nombre\r\n        self.apellido = apellido\r\n        self.edad = edad\r\n        self.promedio = promedio\r\n\r\ndef main():\r\n    alu = [None]*50\r\n    n = 0\r\n    menor = 0\r\n    ubi = 0\r\n    extras = 0\r\n    codbus = 0\r\n\r\n    while True:\r\n        os.system('clear')\r\n        print(\"-------- MENU --------\")\r\n        print(\"1. Ingresar datos\")\r\n        print(\"2. Mostrar datos\")\r\n        print(\"3. Ingresar más datos\")\r\n        print(\"4. Mostrar Alumno de Menor Edad\")\r\n        print(\"5. Ordenar\")\r\n        print(\"6. Buscar por Código\")\r\n        print(\"7. Atender\")\r\n        print(\"9. Salir\")\r\n        resp = input()\r\n\r\n        match resp:\r\n            case '1':\r\n                os.system('clear')\r\n                print(\"-------- INGRESAR DATOS --------\")\r\n                n = int(input(\"¿Cuántos alumnos desea ingresar: (0 para cancelar)  \"))\r\n                for i in range(n):\r\n                    print(\"Ingrese el código del alumno \", i+1, \": \")\r\n                    cod = int(input())\r\n                    print(\"Ingrese el nombre del alumno \", i+1, \": \")\r\n                    nombre = input()\r\n                    print(\"Ingrese el apellido del alumno \", i+1, \": \")\r\n                    apellido = input()\r\n                    print(\"Ingrese la edad del alumno \", i+1, \": \")\r\n                    edad = int(input())\r\n                    print(\"Ingrese el promedio del alumno \", i+1, \": \")\r\n                    promedio = float(input())\r\n                    alu[i] = Alumno(cod, nombre, apellido, edad, promedio)\r\n                break\r\n            case '2':\r\n                os.system('clear')\r\n                print(\"-------- MOSTRAR DATOS --------\")\r\n                if n == 0:\r\n                    print(\"No hay alumnos que mostrar\")\r\n                else:\r\n                    for i in range(n):\r\n                        print(\"Código del alumno \", i+1, \": \", alu[i].cod)\r\n                        print(\"Nombre del alumno \", i+1, \": \", alu[i].nombre)\r\n                        print(\"Apellido del alumno \", i+1, \": \", alu[i].apellido)\r\n                        print(\"Edad del alumno \", i+1, \": \", alu[i].edad)\r\n                        print(\"Promedio del alumno \", i+1, \": \", alu[i].promedio)\r\n                break\r\n            case '3':\r\n                os.system('clear')\r\n                print(\"-------- INGRESAR MÁS DATOS --------\")\r\n                if n == 0:\r\n                    print(\"No hay alumnos que mostrar\")\r\n                    break\r\n                extras = int(input(\"¿Cuántos alumnos desea ingresar: (0 para cancelar)  \"))\r\n                for i in range(n, n+extras):\r\n                    print(\"Ingrese el código del alumno \", i+1, \": \")\r\n                    cod = int(input())\r\n                    print(\"Ingrese el nombre del alumno \", i+1, \": \")\r\n                    nombre = input()\r\n                    print(\"Ingrese el apellido del alumno \", i+1, \": \")\r\n                    apellido = input()\r\n                    print(\"Ingrese la edad del alumno \", i+1, \": \")\r\n                    edad = int(input())\r\n                    print(\"Ingrese el promedio del alumno \", i+1, \": \")\r\n                    promedio = float(input())\r\n                    alu[i] = Alumno(cod, nombre, apellido, edad, promedio)\r\n                n = n + extras\r\n                break\r\n            case '4':\r\n                os.system('clear')\r\n                print(\"-------- MOSTRAR ALUMNO DE MENOR EDAD --------\")\r\n                if n == 0:\r\n                    print(\"No hay alumnos que mostrar\")\r\n                    break\r\n                menor = alu[0].edad\r\n                ubi = 0\r\n                for i in range(n):\r\n                    if alu[i].edad < menor:\r\n                        menor = alu[i].edad\r\n                        ubi = i\r\n                print(\"El alumno de menor edad es: \", alu[ubi].nombre, \" \", alu[ubi].apellido)\r\n                break\r\n            case '5':\r\n                os.system('clear')\r\n                print(\"-------- ORDENAR --------\")\r\n                if n == 0:\r\n                    print(\"No hay alumnos que ordenar\")\r\n                    break\r\n                print(\"1. Ordenar por Código\")\r\n                print(\"2. Ordenar por Nombre\")\r\n                print(\"3. Ordenar por Apellido\")\r\n                print(\"4. Ordenar por Edad\")\r\n                print(\"5. Ordenar por Promedio\")\r\n                resp2 = input()\r\n                match resp2:\r\n                    case '1':\r\n                        for i in range(n-1):\r\n                            for j in range(i+1, n):\r\n                                if alu[i].cod > alu[j].cod:\r\n                                    aux = alu[i]\r\n                                    alu[i] = alu[j]\r\n                                    alu[j] = aux\r\n                        break\r\n                    case '2':\r\n                        for i in range(n-1):\r\n                            for j in range(i+1, n):\r\n                                if alu[i].nombre > alu[j].nombre:\r\n                                    aux = alu[i]\r\n                                    alu[i] = alu[j]\r\n                                    alu[j] = aux\r\n                        break\r\n                    case '3':\r\n                        for i in range(n-1):\r\n                            for j in range(i+1, n):\r\n                                if alu[i].apellido > alu[j].apellido:\r\n                                    aux = alu[i]\r\n                                    alu[i] = alu[j]\r\n                                    alu[j] = aux\r\n                        break\r\n                    case '4':\r\n                        for i in range(n-1):\r\n                            for j in range(i+1, n):\r\n                                if alu[i].edad > alu[j].edad:\r\n                                    aux = alu[i]\r\n                                    alu[i] = alu[j]\r\n                                    alu[j] = aux\r\n                        break\r\n                    case '5':\r\n                        for i in range(n-1):\r\n                            for j in range(i+1, n):\r\n                                if alu[i].promedio > alu[j].promedio:\r\n                                    aux = alu[i]\r\n                                    alu[i] = alu[j]\r\n                                    alu[j] = aux\r\n                        break\r\n                break\r\n            case '6':\r\n                os.system('clear')\r\n                print(\"-------- BUSCAR POR CÓDIGO --------\")\r\n                if n == 0:\r\n                    print(\"No hay alumnos que busvar\")\r\n                    break\r\n                codbus = int(input(\"Ingrese el código a buscar: \"))\r\n                for i in range(n):\r\n                    if alu[i].cod == codbus:\r\n                        print(\"Código del alumno \", i+1, \": \", alu[i].cod)\r\n                        print(\"Nombre del alumno \", i+1, \": \", alu[i].nombre)\r\n                        print(\"Apellido del alumno \", i+1, \": \", alu[i].apellido)\r\n                        print(\"Edad del alumno \", i+1, \": \", alu[i].edad)\r\n                        print(\"Promedio del alumno \", i+1, \": \", alu[i].promedio)\r\n                break\r\n            case '7':\r\n                os.system('clear')\r\n                print(\"-------- ATENDER --------\")\r\n                if n == 0:\r\n                    print(\"No hay alumnos que atender\")\r\n                    break\r\n                print(\"1. Atender por Cola\")\r\n                print(\"2. Atender por Pila\")\r\n                resp3 = input()\r\n                match resp3:\r\n                    case '1':\r\n                        print(\"Código del alumno \", n, \": \", alu[n-1].cod)\r\n                        print(\"Nombre del alumno \", n, \": \", alu[n-1].nombre)\r\n                        print(\"Apellido del alumno \", n, \": \", alu[n-1].apellido)\r\n                        print(\"Edad del alumno \", n, \": \", alu[n-1].edad)\r\n                        print(\"Promedio del alumno \", n, \": \", alu[n-1].promedio)\r\n                        n = n - 1\r\n                        break\r\n                    case '2':\r\n                        print(\"Código del alumno \", n, \": \", alu[0].cod)\r\n                        print(\"Nombre del alumno \", n, \": \", alu[0].nombre)\r\n                        print(\"Apellido del alumno \", n, \": \", alu[0].apellido)\r\n                        print(\"Edad del alumno \", n, \": \", alu[0].edad)\r\n                        print(\"Promedio del alumno \", n, \": \", alu[0].promedio)\r\n                        for i in range(n-1):\r\n                            alu[i] = alu[i+1]\r\n                        n = n - 1\r\n                        break\r\n                break\r\n            case '9':\r\n                os.system('clear')\r\n                print(\"-------- SALIR --------\")\r\n                break\r\n            case _:\r\n                os.system('clear')\r\n                print(\"-------- ERROR --------\")\r\n                print(\"Ingrese una opción válida\")\r\n                break\r\n\r\nif __name__ == '__main__':\r\n    main()",
      "subcategoty": null
    }
  },
  {
    "model": "exercises.exercises",
    "pk": 12,
    "fields": {
      "category": 3,
      "title": "Menú de Registro de Nacimientos",
      "desc": "Crear un programa en C++ que permita ingrenar N cantidad de personas con los datos:\r\n\r\n1. DNI\r\n2. Nombre\r\n3. Fecha de Nacimiento\r\n\r\nDonde se registen el día, mes y año de nacimiento.",
      "cpp_snippet": "#include <iostream>\r\n#include <string>\r\n#include <locale>\r\n\r\nusing namespace std;\r\n\r\nstruct Fecha{\r\n    int dia;\r\n    int mes;\r\n    int anio;\r\n};\r\n\r\nstruct Persona{\r\n    int dni;\r\n    string nombre;\r\n    Fecha fecha_nac;\r\n};\r\n\r\nvoid limpiar(){\r\n    system(\"clear\"); //REEMPLAZAR POR system(\"cls\") en Windows\r\n}\r\n\r\nbool checkeo(int &n){\r\n    if (n == 0){\r\n        cout << \"No hay personas registradas\" << endl;\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\nint main(){\r\n    setlocale(LC_ALL, \"es_ES.UTF-8\");\r\n\r\n    bool omitir = false;\r\n    char confir, resp2;\r\n    int n, n2, resp, num; \r\n    Persona P[100]; \r\n\r\n    do{\r\n        system(\"clear\");\r\n\r\n        cout << \"-------- MENU PRINCIPAL --------\" << endl;\r\n        cout << \"1. Ingresar datos de las personas\" << endl;\r\n        cout << \"2. Añadir datos de las personas\" << endl;\r\n        cout << \"3. Listar a la Derecha\" << endl;\r\n        cout << \"4. Listar a la Izquierda\" << endl;\r\n        cout << \"5. Mostrar el de menor edad\" << endl;\r\n        cout << \"10. Salir\" << endl;\r\n\r\n        cout << \"Ingrese su opcion: \"; cin >> resp;\r\n\r\n        switch (resp){\r\n            case 1:\r\n                limpiar();\r\n                cout << \"-------- INGRESAR DATOS DE LAS PERSONAS --------\" << endl;\r\n                cout << \"Ingrese la cantidad de personas (máx. 100 personas): \"; cin >> n;\r\n                while (n < 1 || n > 100){\r\n                    cout << \"Ingrese la cantidad de personas dentro del rango (1-100): \"; cin >> n;\r\n                }\r\n                for(int i = 0; i < n; i++){\r\n                    limpiar();\r\n                    cout << \"-------- INGRESAR DATOS DE LAS PERSONAS --------\" << endl;\r\n                    cout << \"Personas registradas: \" << i << endl << \"Personas a registrar: \" << n-i << endl;\r\n                    cout << endl << \"-------- PERSONA \" << i+1 << \" --------\" << endl;\r\n                    cout << \"Ingrese el DNI de la persona: \"; cin >> P[i].dni;\r\n                    cout << \"Ingrese el nombre de la persona: \"; cin >> P[i].nombre;\r\n                    cout << \"Ingrese el día de nacimiento de la persona: \"; cin >> P[i].fecha_nac.dia;\r\n                    cout << \"Ingrese el mes de nacimiento de la persona: \"; cin >> P[i].fecha_nac.mes;\r\n                    cout << \"Ingrese el año de nacimiento de la persona: \"; cin >> P[i].fecha_nac.anio;\r\n                }\r\n                limpiar();\r\n                cout << \"-------- INGRESAR DATOS DE LAS PERSONAS --------\" << endl;\r\n                cout << \"Cantidad de personas registradas: \" << n << endl;\r\n                break;\r\n            case 2:\r\n                limpiar();\r\n                cout << \"-------- AÑADIR DATOS DE LAS PERSONAS --------\" << endl;\r\n                omitir = checkeo(n);\r\n                if (omitir){\r\n                    break;\r\n                };\r\n                cout << \"Cantidad de personas registradas: \" << n << endl;\r\n                cout << \"Ingrese la cantidad de personas a añadir (máx. 100 personas): \"; cin >> n2;\r\n                while ((n+n2) < 1 || (n+n2) > 100){\r\n                    cout << \"La cantidad de personas a agregar no debe pasar el rango (1-100): \"; cin >> n;\r\n                }\r\n                for(int i = 0; i < n2; i++){\r\n                    limpiar();\r\n                    cout << \"-------- AÑADIR DATOS DE LAS PERSONAS --------\" << endl;\r\n                    cout << endl << \"Personas registradas: \" << n+i << endl << \"Personas a registrar: \" << n2-i << endl;\r\n                    cout << \"-------- PERSONA \" << n+i+1 << \" --------\" << endl;\r\n                    cout << \"Ingrese el DNI de la persona: \"; cin >> P[n+i].dni;\r\n                    cout << \"Ingrese el nombre de la persona: \"; cin >> P[n+i].nombre;\r\n                    cout << \"Ingrese el día de nacimiento de la persona: \"; cin >> P[n+i].fecha_nac.dia;\r\n               \r\n                cout << endl;     cout << \"Ingrese el mes de nacimiento de la persona: \"; cin >> P[n+i].fecha_nac.mes;\r\n                    cout << \"Ingrese el año de nacimiento de la persona: \"; cin >> P[n+i].fecha_nac.anio;\r\n                }\r\n                n = n+n2;\r\n                break;\r\n            case 3:\r\n                limpiar();\r\n                cout << \"-------- LISTAR A LA DERECHA --------\" << endl;\r\n                omitir = checkeo(n);\r\n                if (omitir){\r\n                    break;\r\n                };\r\n                num = 0;\r\n                do{\r\n                    limpiar();\r\n                    cout << \"-------- LISTAR A LA DERECHA --------\" << endl;\r\n                    cout << \"Presione la tecla D para mostrar a la siguiente persona\" << endl;\r\n                    cout << \"Presione la tecla X para volver al menu principal\" << endl;\r\n                    cout << endl << \"------------------------------------\" << endl;\r\n                    cout << \"DNI: \" << P[num].dni << endl;\r\n                    cout << \"Nombre: \" << P[num].nombre << endl;\r\n                    cout << \"Fecha de nacimiento: \" << P[num].fecha_nac.dia << \"/\" << P[num].fecha_nac.mes << \"/\" << P[num].fecha_nac.anio << endl;\r\n                    cout << \"------------------------------------\" << endl;\r\n                    cin >> resp2; // REEMPLAZAR POR getch() en Windows\r\n                    if (num == n-1){\r\n                        num = 0;\r\n                    }\r\n                    else{\r\n                        num++;\r\n                    }\r\n                }while (resp2 == 'd' || resp2 == 'D');\r\n                break;\r\n            case 4:\r\n                limpiar();\r\n                cout << \"-------- LISTAR A LA IZQUIERDA --------\" << endl;\r\n                omitir = checkeo(n);\r\n                if (omitir){\r\n                    break;\r\n                };\r\n                num = n-1;\r\n                do{\r\n                    limpiar();\r\n                    cout << \"-------- LISTAR A LA IZQUIERDA --------\" << endl;\r\n                    cout << \"Presione la tecla A para mostrar a la siguiente persona\" << endl;\r\n                    cout << \"Presione la tecla X para volver al menu principal\" << endl;\r\n                    cout << endl << \"------------------------------------\" << endl;\r\n                    cout << \"DNI: \" << P[num].dni << endl;\r\n                    cout << \"Nombre: \" << P[num].nombre << endl;\r\n                    cout << \"Fecha de nacimiento: \" << P[num].fecha_nac.dia << \"/\" << P[num].fecha_nac.mes << \"/\" << P[num].fecha_nac.anio << endl;\r\n                    cout << \"------------------------------------\" << endl;\r\n                    cin >> resp2; // REEMPLAZAR POR getch() en Windows\r\n                    if (num == 0){\r\n                        num = n-1;\r\n                    }\r\n                    else{\r\n                        num--;\r\n                    }\r\n                }while (resp2 == 'a' || resp2 == 'A');\r\n                break;\r\n            case 5:\r\n                limpiar();\r\n                cout << \"-------- MOSTRAR EL DE MENOR EDAD --------\" << endl;\r\n                omitir = checkeo(n);\r\n                if (omitir){\r\n                    break;\r\n                };\r\n                num = 0;\r\n                for(int i = 0; i < n; i++){\r\n                    if (P[i].fecha_nac.anio < P[num].fecha_nac.anio){\r\n                        num = i;\r\n                    }\r\n                    else if (P[i].fecha_nac.anio == P[num].fecha_nac.anio){\r\n                        if (P[i].fecha_nac.mes < P[num].fecha_nac.mes){\r\n                            num = i;\r\n                        }\r\n                        else if (P[i].fecha_nac.mes == P[num].fecha_nac.mes){\r\n                            if (P[i].fecha_nac.dia < P[num].fecha_nac.dia){\r\n                                num = i;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                cout << \"La persona de menor edad es: \" << P[num].nombre << endl;\r\n                cout << \"DNI: \" << P[num].dni << endl;\r\n                cout << \"Fecha de nacimiento: \" << P[num].fecha_nac.dia << \"/\" << P[num].fecha_nac.mes << \"/\" << P[num].fecha_nac.anio << endl;\r\n                break;\r\n            case 10:\r\n                limpiar();\r\n                cout << \"-------- SALIR --------\" << endl;\r\n                cout << \"Gracias por usar el programa\" << endl;\r\n                break;\r\n            default:\r\n                limpiar();\r\n                cout << \"-------- ERROR --------\" << endl;\r\n                cout << \"Ingrese una opcion valida\" << endl;\r\n                break;\r\n        }\r\n        cout << \"\\n¿Desea continuar? (s/n): \"; cin >> confir;\r\n    }while (confir == 's' || confir == 'S');  \r\n}",
      "py_snippet": "import os\r\nimport datetime\r\n\r\nclass Fecha:\r\n    def __init__(self, dia, mes, anio):\r\n        self.dia = dia\r\n        self.mes = mes\r\n        self.anio = anio\r\n\r\nclass Persona:\r\n    def __init__(self, dni, nombre, fecha_nac):\r\n        self.dni = dni\r\n        self.nombre = nombre\r\n        self.fecha_nac = fecha_nac\r\n\r\ndef limpiar():\r\n    os.system('clear')  # use 'cls' for Windows\r\n\r\ndef checkeo(n):\r\n    if n == 0:\r\n        print(\"No hay personas registradas\")\r\n        return True\r\n    else:\r\n        return False\r\n\r\ndef main():\r\n    P = [None]*100\r\n    n = 0\r\n\r\n    while True:\r\n        limpiar()\r\n\r\n        print(\"-------- MENU PRINCIPAL --------\")\r\n        print(\"1. Ingresar datos de las personas\")\r\n        print(\"2. Añadir datos de las personas\")\r\n        print(\"3. Listar a la Derecha\")\r\n        print(\"4. Listar a la Izquierda\")\r\n        print(\"5. Mostrar el de menor edad\")\r\n        print(\"10. Salir\")\r\n\r\n        resp = int(input(\"Ingrese su opcion: \"))\r\n\r\n        match resp:\r\n            case 1:\r\n                limpiar()\r\n                print(\"-------- INGRESAR DATOS DE LAS PERSONAS --------\")\r\n                n = int(input(\"Ingrese la cantidad de personas (máx. 100 personas): \"))\r\n                while n < 1 or n > 100:\r\n                    n = int(input(\"Ingrese la cantidad de personas dentro del rango (1-100): \"))\r\n                for i in range(n):\r\n                    limpiar()\r\n                    print(\"-------- INGRESAR DATOS DE LAS PERSONAS --------\")\r\n                    print(\"Personas registradas: \", i)\r\n                    print(\"Personas a registrar: \", n-i)\r\n                    print(\"\\n-------- PERSONA \", i+1, \" --------\")\r\n                    dni = int(input(\"Ingrese el DNI de la persona: \"))\r\n                    nombre = input(\"Ingrese el nombre de la persona: \")\r\n                    dia = int(input(\"Ingrese el día de nacimiento de la persona: \"))\r\n                    mes = int(input(\"Ingrese el mes de nacimiento de la persona: \"))\r\n                    anio = int(input(\"Ingrese el año de nacimiento de la persona: \"))\r\n                    P[i] = Persona(dni, nombre, Fecha(dia, mes, anio))\r\n                limpiar()\r\n                print(\"-------- INGRESAR DATOS DE LAS PERSONAS --------\")\r\n                print(\"Cantidad de personas registradas: \", n)\r\n                break\r\n            case 2:\r\n                limpiar()\r\n                print(\"-------- AÑADIR DATOS DE LAS PERSONAS --------\")\r\n                if checkeo(n):\r\n                    break\r\n                else:\r\n                    if n < 100:\r\n                        for i in range(n, 100):\r\n                            print(\"-------- AÑADIR DATOS DE LAS PERSONAS --------\")\r\n                            print(\"Personas registradas: \", i)\r\n                            print(\"Personas a registrar: \", 100-i)\r\n                            print(\"\\n-------- PERSONA \", i+1, \" --------\")\r\n                            dni = int(input(\"Ingrese el DNI de la persona: \"))\r\n                            nombre = input(\"Ingrese el nombre de la persona: \")\r\n                            dia = int(input(\"Ingrese el día de nacimiento de la persona: \"))\r\n                            mes = int(input(\"Ingrese el mes de nacimiento de la persona: \"))\r\n                            anio = int(input(\"Ingrese el año de nacimiento de la persona: \"))\r\n                            P[i] = Persona(dni, nombre, Fecha(dia, mes, anio))\r\n                            n += 1\r\n                        limpiar()\r\n                        print(\"-------- AÑADIR DATOS DE LAS PERSONAS --------\")\r\n                        print(\"Cantidad de personas registradas: \", n)\r\n                    else:\r\n                        print(\"No hay espacio para registrar más personas\")\r\n                break\r\n            case 3:\r\n                limpiar()\r\n                print(\"-------- LISTAR A LA DERECHA --------\")\r\n                if checkeo(n):\r\n                    break\r\n                else:\r\n                    for i in range(n):\r\n                        print(\"\\n-------- PERSONA \", i+1, \" --------\")\r\n                        print(\"DNI: \", P[i].dni)\r\n                        print(\"Nombre: \", P[i].nombre)\r\n                        print(\"Fecha de nacimiento: \", P[i].fecha_nac.dia, \"/\", P[i].fecha_nac.mes, \"/\", P[i].fecha_nac.anio)\r\n                break\r\n            case 4:\r\n                limpiar()\r\n                print(\"-------- LISTAR A LA IZQUIERDA --------\")\r\n                if checkeo(n):\r\n                    break\r\n                else:\r\n                    for i in range(n-1, -1, -1):\r\n                        print(\"\\n-------- PERSONA \", i+1, \" --------\")\r\n                        print(\"DNI: \", P[i].dni)\r\n                        print(\"Nombre: \", P[i].nombre)\r\n                        print(\"Fecha de nacimiento: \", P[i].fecha_nac.dia, \"/\", P[i].fecha_nac.mes, \"/\", P[i].fecha_nac.anio)\r\n                break\r\n            case 5:\r\n                limpiar()\r\n                print(\"-------- MOSTRAR EL DE MENOR EDAD --------\")\r\n                if checkeo(n):\r\n                    break\r\n                else:\r\n                    menor = datetime.date.today()\r\n                    for i in range(n):\r\n                        fecha = datetime.date(P[i].fecha_nac.anio, P[i].fecha_nac.mes, P[i].fecha_nac.dia)\r\n                        if fecha < menor:\r\n                            menor = fecha\r\n                            pos = i\r\n                    print(\"\\n-------- PERSONA \", pos+1, \" --------\")\r\n                    print(\"DNI: \", P[pos].dni)\r\n                    print(\"Nombre: \", P[pos].nombre)\r\n                    print(\"Fecha de nacimiento: \", P[pos].fecha_nac.dia, \"/\", P[pos].fecha_nac.mes, \"/\", P[pos].fecha_nac.anio)\r\n            case 10:\r\n                limpiar()\r\n                print(\"-------- SALIR --------\")\r\n                print(\"Gracias por usar el programa\")\r\n                break\r\n            case _:\r\n                limpiar()\r\n                print(\"-------- ERROR --------\")\r\n                print(\"Ingrese una opcion valida\")\r\n                break\r\n        confir = input(\"\\n¿Desea continuar? (s/n): \")\r\n        if confir.lower() != 's':\r\n            break\r\n\r\nif __name__ == \"__main__\":\r\n    main()",
      "subcategoty": null
    }
  },
  {
    "model": "exercises.exercises",
    "pk": 13,
    "fields": {
      "category": 4,
      "title": "Búsqueda Binaria",
      "desc": "Crear una clase que permita buscar un elemento en un arreglo predefinido y ordenado mediante búsqueda lineal y también con el método de Búsqueda Binaria",
      "cpp_snippet": "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\nclass Busqueda {\r\npublic:\r\n    // Búsqueda lineal\r\n    static int busquedaLineal(const vector<int>& arreglo, int elemento) {\r\n        for (int i = 0; i < arreglo.size(); ++i) {\r\n            if (arreglo[i] == elemento) {\r\n                return i;  // Elemento encontrado, devuelve la posición\r\n            }\r\n        }\r\n        return -1;  // Elemento no encontrado\r\n    }\r\n\r\n    // Búsqueda binaria (el arreglo debe estar ordenado)\r\n    static int busquedaBinaria(const std::vector<int>& arreglo, int elemento) {\r\n        int izquierda = 0;\r\n        int derecha = arreglo.size() - 1;\r\n\r\n        while (izquierda <= derecha) {\r\n            int medio = izquierda + (derecha - izquierda) / 2;\r\n\r\n            if (arreglo[medio] == elemento) {\r\n                return medio;  // Elemento encontrado, devuelve la posición\r\n            } else if (arreglo[medio] < elemento) {\r\n                izquierda = medio + 1;  // Busca en la mitad derecha\r\n            } else {\r\n                derecha = medio - 1;  // Busca en la mitad izquierda\r\n            }\r\n        }\r\n\r\n        return -1;  // Elemento no encontrado\r\n    }\r\n};\r\n\r\nint main() {\r\n    vector<int> arreglo = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\r\n    int elementoBuscado = 5;\r\n\r\n    // Búsqueda lineal\r\n    int resultadoLineal = Busqueda::busquedaLineal(arreglo, elementoBuscado);\r\n    if (resultadoLineal != -1) {\r\n        cout << \"Búsqueda lineal: Elemento encontrado en la posición \" << resultadoLineal << endl;\r\n    } else {\r\n        cout << \"Búsqueda lineal: Elemento no encontrado\" <<endl;\r\n    }\r\n\r\n    // Búsqueda binaria\r\n    // Nota: El arreglo debe estar ordenado para usar la búsqueda binaria\r\n    int resultadoBinaria = Busqueda::busquedaBinaria(arreglo, elementoBuscado);\r\n    if (resultadoBinaria != -1) {\r\n    cout << \"Búsqueda binaria: Elemento encontrado en la posición \" << resultadoBinaria << endl;\r\n    } else {\r\n        cout << \"Búsqueda binaria: Elemento no encontrado\" << endl;\r\n    }\r\n\r\n    return 0;\r\n}",
      "py_snippet": "class Busqueda:\r\n    @staticmethod\r\n    def busquedaLineal(arreglo, elemento):\r\n        for i in range(len(arreglo)):\r\n            if arreglo[i] == elemento:\r\n                return i  # Elemento encontrado, devuelve la posición\r\n        return -1  # Elemento no encontrado\r\n\r\n    @staticmethod\r\n    def busquedaBinaria(arreglo, elemento):\r\n        izquierda = 0\r\n        derecha = len(arreglo) - 1\r\n\r\n        while izquierda <= derecha:\r\n            medio = izquierda + (derecha - izquierda) // 2\r\n\r\n            if arreglo[medio] == elemento:\r\n                return medio  # Elemento encontrado, devuelve la posición\r\n            elif arreglo[medio] < elemento:\r\n                izquierda = medio + 1  # Busca en la mitad derecha\r\n            else:\r\n                derecha = medio - 1  # Busca en la mitad izquierda\r\n\r\n        return -1  # Elemento no encontrado\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    arreglo = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n    elementoBuscado = 5\r\n\r\n    # Búsqueda lineal\r\n    resultadoLineal = Busqueda.busquedaLineal(arreglo, elementoBuscado)\r\n    if resultadoLineal != -1:\r\n        print(f\"Búsqueda lineal: Elemento encontrado en la posición {resultadoLineal}\")\r\n    else:\r\n        print(\"Búsqueda lineal: Elemento no encontrado\")\r\n\r\n    # Búsqueda binaria\r\n    # Nota: El arreglo debe estar ordenado para usar la búsqueda binaria\r\n    resultadoBinaria = Busqueda.busquedaBinaria(arreglo, elementoBuscado)\r\n    if resultadoBinaria != -1:\r\n        print(f\"Búsqueda binaria: Elemento encontrado en la posición {resultadoBinaria}\")\r\n    else:\r\n        print(\"Búsqueda binaria: Elemento no encontrado\")",
      "subcategoty": 2
    }
  },
  {
    "model": "exercises.methods",
    "pk": 5,
    "fields": {
      "func": "Declarar Variables",
      "detail": "En Python, la declaración de una variable es bastante simple y no requiere especificar el tipo de dato de antemano. Simplemente asignas un valor a un nombre de variable utilizando el operador de asignación \"=\".\r\n\r\nEn C++, la declaración de una variable implica la especificación de su tipo de dato antes de asignarle un valor. Puedes usar varios tipos de datos predefinidos o crear tus propios tipos de datos definidos por el usuario utilizando clases o estructuras.",
      "py_snip": "# Declaración de múltiples variables en Python\r\n# INT\r\nnumero1 = 10\r\n\r\n# FLOAT\r\nnumero2 = 2.2\r\n\r\n# STRING\r\nnombre = \"Juan\"",
      "cpp_snip": "// Declaración de múltiples variables en Python\r\n\r\n// INT\r\nint numero1 = 10\r\n\r\n// FLOAT\r\nfloat numero2 = 2.2;\r\n\r\n#include <string> // La declaración de strings depende de esta librería\r\nstring nombre = \"Juan\";"
    }
  },
  {
    "model": "exercises.methods",
    "pk": 6,
    "fields": {
      "func": "Condicional",
      "detail": "En Python, los condicionales se utilizan principalmente con las declaraciones if, elif (abreviatura de \"else if\"), y else. Los condicionales en Python se basan en la indentación para definir bloques de código.\r\n\r\nEn C++, los condicionales se utilizan con las declaraciones if, else if, y else. Además, se utilizan llaves {} para definir bloques de código dentro de los condicionales.",
      "py_snip": "edad = 18\r\n\r\nif edad < 18:\r\n    print(\"Eres menor de edad\")\r\nelif edad == 18:\r\n    print(\"Tienes exactamente 18 años\")\r\nelse:\r\n    print(\"Eres mayor de edad\")",
      "cpp_snip": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int edad = 18;\r\n\r\n    if (edad < 18) {\r\n        cout << \"Eres menor de edad\" << endl;\r\n    } else if (edad == 18) {\r\n        cout << \"Tienes exactamente 18 años\" << endl;\r\n    } else {\r\n        cout << \"Eres mayor de edad\" << endl;\r\n    }\r\n\r\n    return 0;\r\n}"
    }
  },
  {
    "model": "exercises.methods",
    "pk": 7,
    "fields": {
      "func": "Bucle For",
      "detail": "En Python, un bucle for se utiliza para iterar sobre elementos en una secuencia (como una lista o una cadena de caracteres) o para repetir un bloque de código un número específico de veces.\r\n\r\nEn C++, un bucle for también se utiliza para iterar sobre una secuencia o para realizar un número específico de iteraciones.",
      "py_snip": "for i in range(5):\r\n    print(i)",
      "cpp_snip": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    for (int i = 0; i < 5; i++) {\r\n        cout << i << endl;\r\n    }\r\n\r\n    return 0;\r\n}"
    }
  },
  {
    "model": "exercises.methods",
    "pk": 8,
    "fields": {
      "func": "Bucle While",
      "detail": "En Python, un bucle while se utiliza para repetir un bloque de código mientras una condición dada sea verdadera. La condición se verifica antes de ejecutar el bloque de código en cada iteración.\r\n\r\nEn C++, un bucle while también se utiliza para repetir un bloque de código mientras una condición sea verdadera.",
      "py_snip": "contador = 0\r\nwhile contador < 5:\r\n    print(contador)\r\n    contador += 1",
      "cpp_snip": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int contador = 0;\r\n    while (contador < 5) {\r\n        cout << contador << endl;\r\n        contador++;\r\n    }\r\n\r\n    return 0;\r\n}"
    }
  },
  {
    "model": "exercises.methods",
    "pk": 9,
    "fields": {
      "func": "Arreglos",
      "detail": "En Python, un arreglo se puede representar como una lista o una tupla, y no es necesario especificar su tamaño de antemano. Los elementos en un arreglo pueden ser de diferentes tipos de datos.\r\n\r\nEn C++, los arreglos son estructuras de datos que almacenan un conjunto fijo de elementos del mismo tipo. Debes especificar el tamaño del arreglo al declararlo.",
      "py_snip": "mi_lista = [1, 2, 3, 4, 5]\r\nnombres = [\"Juan\", \"María\", \"Pedro\"]\r\n\r\n# Acceder a los elementos del arreglo\r\nprint(*mi_lista)\r\nprint(*nombres)",
      "cpp_snip": "#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int mi_arreglo[5] = {1, 2, 3, 4, 5};\r\n    string nombres[3] = {\"Juan\", \"Maria\", \"Pedro\"};\r\n\r\n    // Acceder a elementos del arreglo\r\n    cout << \"Primer elemento: \" << mi_arreglo[0] << endl;\r\n    cout << \"Nombre: \" << nombres[1] << endl;\r\n\r\n    return 0;\r\n}"
    }
  }
]
